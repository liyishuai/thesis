%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 660.000000 230.000000
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 660 230
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 660 230
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: SourceCodePro-Regular
%!FontType1-1.0: SourceCodePro-Regular 1.0000.1.0100
14 dict begin
/FontName /SourceCodePro-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /g put
dup 34 /e put
dup 35 /n put
dup 36 /underscore put
dup 37 /r put
dup 38 /q put
dup 39 /u put
dup 40 /s put
dup 41 /t put
dup 42 /p put
dup 43 /i put
dup 44 /a put
dup 45 /o put
dup 46 /d put
dup 47 /c put
dup 48 /v put
dup 49 /b put
dup 50 /y put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -25 1 index div -285 2 index div 706 3 index div 952 5 -1 roll div]cvx def
/sfnts [<





00>] def
/CharStrings 19 dict dup begin
/.notdef 0 def
/a 1 def
/b 2 def
/c 3 def
/d 4 def
/e 5 def
/g 6 def
/i 7 def
/n 8 def
/o 9 def
/p 10 def
/q 11 def
/r 12 def
/s 13 def
/t 14 def
/u 15 def
/v 16 def
/y 17 def
/underscore 18 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-25 -285 706 952} readonly def
/UniqueID 4158941 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB28299D261F4869FB8C8225AD81CFC6544C589AC24D08455E7AC212C654840A2B9B0F75B7FD02086465A79415901680C337B4C2891D1DFDC44A5629742A7E9DD073826434D77B0A255A05DCEAE05514DB7562B7EFFA731ADE66CDC7E222FDE8F522FBF9F435DEF78D1D639C5ED83DF5004F0D11C860B747AC25739F64F9B9B19E423054980B463562063E7255BF70EFCB0E267C095FABB57CB0C80308A7C167FB5094F0164CD4B96F53F25753348772956077145982DF7648B4853090DAC4374F2A3F2936BF23C74AC73D860C450AD154867266BE89BFC0547F3B0B2B4C587F09CD18ACFEB27AF351D2A9C7E7BFB3ABFD8B579A448A7701B5F8C7129B79B36D4A7B4F76D09DE30B43D8620510D7C53AA6C1F3C3D46A276915CAA2A88B0169DBAC6ECAD4F7F4410330D8A247AEA32858F55A3EC86D224B82E14C926E45FEC1A9D3A3BE2EA776B6985723312FEDEF25FEB2E8433F26C9978DA84DEF890F4343602572F7E2E2BBCB1AD152BC5FE24FAC2D091E09E5DA8025773A0BE966DC2324D00B55909FBD96F08DE4A3B805E4EE0D7EA1F3C1B49C6C4EE4CC5C45546D3A73F43EFA94D214C6643AEE3A5A4FEC17065E00124F376A8257C9CE4315556DEEFF37B4350C24044AD731F42AB78752FBA341B9C3D3F25FDA3B10A540B5A547C0712C6371BFB7390004DA7B9BB3BCB27416B361F2ED339551ED32BCECC1689E24E9713CDBFFE753860FCBE2822ACBABDCF34CCAFCBF6A10BB570D43BE981D663EC5F319FDEFF716F
029DD1725608A571CF25897AE3A0ABBFB1AA860F34B5205DC622B5DFE1793D62F266CC61DEFB061AF8A115EF613268B4E933EC086B37212CDE8E6A7C7938341058172C5485DDE4D128B2F9E53400F7F52A7A8BCCCD3029247311907F6AD71B72810217CC68F64EDB4088188BFD733604D7000F3487560B5C65064D4ED2DD3532E37C2D84391FB32417A348AF24ECBE5C809EFF842C6A63A49B7D076C26B97CBA74BB0D66DBBF5DD1A4DC04A9EDF5139D96D33EF7E71F345C7D95B38815F9DEB5928D35C1FD353077059A290F0FB27F47DA6F57EF6B62209AEC69BF33F1E3CEF340F485DBFC565CD4174A4F49EE17BE9D75A1BF7036F74771FDAF84DF8ABF2E283C1CE9F6EDC408586BD9DFF0F1C33C12EE1980C5CDE56F72C3D10A061CDEAED1C8CC65DC0E6D3DA6C34B56D606C836538D759EA58FA8C1022D1958F3B3881D25EC9E2E9705042CA3091E56BA03AB65A53F1136352EAE1F4D12AE19B3764318DD3F5569DDCEB816C7CFD14DC83D28919B1FF141730A7AE3BC99F85D590066005A6CCD0AE9DD3CC419AF2374D59976765269FDE744E744E7AEE475BF2BD100DD6FC4C8F5D2D4360DFE34E3310AA040FDA8A2FC553B6E331279FFB08256028049E04E326283DDB58FB276C5EABEF8F129A944ED4B4F2D88D762412C3507556B10BE42A93A1BAA2D422AE0DB7B69970D0A215F82DC2752E6FE18BDCF56C71D3A808A9E20CE3E1FDC49C989BFA7B9F7E2559208CAA4FF444C5B2D4A8A324709183B52D990C8C21743F29D6661BD3102D993BE581932F58F9B8CFFF591DA06EE25DF74DF55ABCA773A09695207EAA595DC2FD94FD898497938DF6D6A276791E6B2317436A61B319C581CDB2C650733AFAE14AFED492311341994A343CADE09410340F0BBC3A94DF17A21FDA1B998702BF517849D7A1729A74F7538C4CBBC243E9F3A72FC59FE561A784FCDEEA7B234041B1A56F28B42B7A6630300FFB86C2471D8A94F5753EAD31570394D3ED9E5A82FEF83E971AB0FF25A20DB073EFB8C5A7CFE8132CD0F370A6ADD899CE4DF5945584954BFCFD7520F56C8F483F9C10A39B61B598ED8A92700F3F8793F1DFEB363363065C9901523B5D03CF1A86EF3AA4E1D47FEB4BA57E56B9B2FCF33AB2874F0F88170BC82475EE804DC4C18993464847603C682DC6987AB6888C1A1D8EDCD58DA3126CEEA132ECFD65D1347111C74C74A348476DB9D10E0731F5E508274B45B10DFB393081DBF985EFB8527811C1E84B816955471B2B4B413EC11505394E7D3C2684A2AE603C4094284A9A175AA8CE6AFAEF9B573369B13BA3AD63FC837556F884292FEB2CC17224F96115683972FD2FF29A5539DFD7BD6ABE3911920418BB07E0787A288FC59725B4222B232CABA049EEED55328CE1ADAC0C45C6208DDEE41F2451D83E03B06ABD36F0038A6AFF608651919C2
4195DCB02C8B056BA6AF214FC0F7830E9482EB3FED401A36DE0F23BD16BA7DFDD33BFDC5FB99701DE30F8600F67948F173F7F57258695E93FD45422A55FC5E4681BB4D31210F70F821460B53482D3C3D5B84CB791F0DA1371D1EAAFFCCC45CCE915C71574326E4283464103155A9C8EADE387C8CEC8EA10240EF3A6B768F65B19C39A5A1533AC681FB3E15E6B208B4B152D7C4BED46D4638C8FDEB60206B509B2C0DA8E9F0A5246C6FBF6739BEC1C96A6C2A038FF5D373493C9FF5251EF30B9C6DF3F10F1F0CD32022EAD2628B1119DF97E9C204E332FEC8720DE4E67F9CC4F9CB2BC8035983F1B309B06C7C22C002E92A5261EDBBE93CD722D39C64119D4DACE14271D26EE4538AC8A7101FDAD82C6353602DBA52A9A1D4A5151258C9C20D5EE954EBA4DB5FC5E14D7E213274326BE81231C1A20C636A00C6D19CCF80F6B2E1B37E80363C84786029A994F9825F04036EEDFF58F6F703D5641A7082BCC4287CD252E79F0D0B2C70958689EC335C43BB7D1CF221DB0B9426477639ECBCB4BDE3E200F73AE08ACEC9187D793E4FC87E8120E67745D40F840FF639069F58D511F853514916962EA98BFE4E5C942BB04383F15994BCCDBBFA5A8CF48AE9F0352E66AD56D73BD47A31585C970F228AD5633BBD4D4FBB5A611939FB30AE39A9F7E3716DDB0F882684059C3356AE16BAE2F42EBB9DCF6DF8E56C25D6C82975EBA7701E843D60FE99814AB245AAC311EBF6B1E598093471979A060AB59722780886BAEA6D471D82B7A79E0A881AC1C5A4C26057BF10FC15FDF34BB70A29D18F6EF18AD635524B53E8ACA22EA88881CA3EE003A1F5984ECD548334A5F9F5E4705A552B6D2CC29537C537063FFB704FFEA3C695FCBB11AB433A0E88EE556ECF542CC2E90918459DFF0A8D625EA1BC344DF243C2E16BE5FDC810134D29A0679683BE755DF7C7D708DE57F2AABC459AFAEAABE12A08984247B914F1B8923BACE096572AE44FA9071140EB5D407406ACBD62380340691B9F01123CA7ADB28EF1BDD2ADCE83C22353B65B65D18201248ADE53B55902AF56758D24318E0CDBF093068659129AB827AA46DE287BA9927C3C9A5A3F823F165306039ADE451CC11D48A46898DA13DB8DC4E665F4722A1057FB2F32DA08DC0A381D9124542DB9D9B07A3F3D217E02734F74A3CCB4F96E0F3809B8C289CB2090AF8F428F9EAE4F3548BF3E774BE4FE0E5D953D224BCCC41BE1AAB69C967AC52A9470909F0BCE80EDE8859D4D8BBE71B6317DD278AB8E1265DEC6719EFFF43EE212D8F0D0BFE7106830D4197389602E29AC54DCA7A6CCE9DBC77E1194D6383ED663B4CE1981A2CECA7C011F9CBB1BE1697149BF44EAF98455C4AE13E2C8B79DB47E9EAF06A459462F126FDA66EDC0BBADC76C9E4BBA901F75EAF367246F4CA24792E90C68DC656687F582B8174E4B5164
984B39AE3063E42DC904B84B3DA79AD92F7EC0D29093AC530FED3CE90A15C4119E111ECBF0493952DA9622E734BDA86543127627AA0B03E0E505DE8AA51B963E85CADF23F80AFE4E611A145F0DEC3B62F55A8E7D89DF95363E90CA6C094930D08FC45C2A4498AB4D465D6CFD68EDEA78AD611DD118E6E59802D9911986FD65DF191C540F074B912230444134796E724B5571836F5E8F4D88F362653ACA78015C7A348F49A602C656218BF186DB0C10ABE38B0C1CC07BBA1D5061A970C8191EAA3F4184FF5C7DBBED2327A997C557DFA17698460F5CA985B933C7BC502F720531E70E90CFD8982C94BA7C9BE538B8A269DE9909357E8AEEF2A39493F89A5923061BF599188F150AF782F1266C8B25F77E7C5D20C12F2A02ABD958A5E618D72D5A7179B8AE1DBCDBF98CCA6C80B81936498DA2ACF4C785F323AEB3A7BAFB40BAF9721A80C595C826A0AB248062DD48CF8EFA8D9E631DFB38460A3512B74C21840C5A9051A346AFF3A2193BEFB921FFE38A2D5B28D4CB32B9C01D7A2276D95C77C7AF8484D0FD82883F437236968BB38B428CAAAA338A6A056AA2D11F6CDA84D17C01DCD6CBAB731A84A94450041C2A58C0C3E1C81EE1E8D2DC6F79C707FC4B8E1E8F957D541CBB0F2733E01113BEE6C956DE1D113A631E3A9D5E4CB4D8BBC33924D791A4975E3CCD9FE6742B0CEF4B29B8CD6C340465E207037C15EC27340B694DC528E8D45C3FC2C7CE8FE46988B020BDB7359ABF8DD5F59D56FE0B1E53539E2B787FBB37FAC1582BCD17398A114DFFF38D9B79BBB6E65396575688D8F95F49C4C6F125629100F3F1119C5CD181FC2403511A13F20B94D671059C871895559AFF1DFBD37247CE5236833EC22A848C36159BBDD0EF13E27443970D5A810DD08EC5DABDC62182EAA946B9E65894FCBB168C8528A8C1F069AFAEEE01C3ADB39685972D8C4E9BD68A5AAB7D8827C2AD6315BA1EDF224393714848AF2A8C4412FA0147D8B8FFBC5A95E41EFEADF5C48A21B7B09D21B4850245113ABA37184C4D9275FDEE2AF0509513AF2C0BF0FFA0F6605466810D886A417D6FDCBA77C8E495F48712C3E9F163EF80FB376AB0CA8F8B221C0A61107F532A2D17F19D554296AEE86CC251B77CB8B2B29B0B1BC856F602CD4E06CAA399C4EF74A5F0E8581B74920C67906B5ABC8530EE007406C16E1319C87A0671B1417F6C1AC21F5484CD43A5B33F08AE45CEA1682D582D431DD5D49286E1EFBD889EA5A5003D1B7F46145095C7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/SourceCodePro-Regular cguidfix
/F1.1/SourceCodePro-Regular renmfont
%RBIBeginFontSubset: LucidaGrande
%!FontType1-1.0: LucidaGrande 1.0000.6.0040
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
14 dict begin
/FontName /LucidaGrande def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /arrowdown put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -2186 1 index div -1509 2 index div 3361 3 index div 2381 5 -1 roll div]cvx def
/sfnts [<



2121591B212121592D2CB00243583DCD181BCD592D2C462346608A8A462320468A608A61B8FF8062232010238AB10C0C8A70456020B0005058B00161B8FFBA8B1BB0468C59B0106068013A2D2C2045B0032546524BB013515B58B0022546206861B00325B003253F2321381B2111592D2C2045B00325465058B0022546206861B00325B003253F2321381B2111592D2C004BB0C8515800B00743B006430B592D2C8A10EC2D2CB00C4358211B2046B0005258B8FFF0381BB0103859592D2C20B0005558B8100063B003254564B00325456461B0005358B0021BB04061B00359254569535845441B2121591B21B0022545B00225456164B028515845441B212159592D2C21210C6423648BB84000622D2C21B08051580C6423648BB82000621BB200402F2B59B002602D2C21B0C051580C6423648BB81555621BB200802F2B59B002602D2C0C6423648BB84000626023212D2C184B5358B00425B00425496423456469B0408B6120B080626AB00225B00225618CB00C2344218A10B00CF6211B218A11231220392F592D2CB00225B002254964B0C05458B8FFF838B008381B2121592D2CB0134358031B02592D2CB0134358021B03592D2CB00A2B2310203CB0172B2D2CB00225B8FFF038B0282B8A102320D023B0102BB0054358C01B3C59201011B00012012D2C4B53234B515A58381B2121592D2C01B0022510D023C901B00113B0001410B0013CB001162D2C01B00013B001B0032549B0031738B001132D2C4B53234B515A5820458A60441B2121592D2C184B5358B00425B004254964B00325B00325496468B0408B6120B080626AB00225B00225618CB00C234421B004251023B00CF61BB00425B0042511122320392F59CC21212D2C0118B0184358B0052546234564611B21B00425B004254A59B00E23442310B00EEC2310B00EEC2D2CB01B435820B0016045B000515820B0016020452068B0005558B0206044211B212121591B20B0016020452068B0005558B8FFE06044B01C4B50582045B02060441B21591B21212159591B21592D2C4B53234B515A58381B2121592D2C4B5458381B2121592D2C4B52587D1B7A592DB800532C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800542C2020456944B001602DB800552CB800542A212DB800562C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800572C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800582C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800592C2020456944B001602020457D691844B001602DB8005A2CB800592A2DB8005B2C4B20B00326





00>] def
/CharStrings 2 dict dup begin
/.notdef 0 def
/arrowdown 1 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {-2186 -1509 3361 2381} readonly def
/UniqueID 4068859 def
currentdict end
currentfile eexec

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/LucidaGrande cguidfix
/F2.1/LucidaGrande renmfont
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /V put
dup 34 /a put
dup 35 /l put
dup 36 /i put
dup 37 /d put
dup 38 /t put
dup 39 /o put
dup 40 /r put
dup 41 /T put
dup 42 /e put
dup 43 /s put
dup 44 /space put
dup 45 /H put
dup 46 /n put
dup 47 /c put
dup 48 /p put
dup 49 /slash put
dup 50 /j put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<





00>] def
/CharStrings 19 dict dup begin
/.notdef 0 def
/space 1 def
/slash 2 def
/H 3 def
/T 4 def
/V 5 def
/a 6 def
/c 7 def
/d 8 def
/e 9 def
/i 10 def
/j 11 def
/l 12 def
/n 13 def
/o 14 def
/p 15 def
/r 16 def
/s 17 def
/t 18 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4111738 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB28299D261F4869FB8C8225AD81CFC6544C589AC24D08455E7AC212C6E840F927EAA73831ECB3D9B5B6B62E05430638E136FF8B61DD3A4E0D35C8548AC39568E06098EFE398DCF58758DEA0F166A52795EEBADB5C4BF78E139028508E3B07905381C425672C7BDA5EF4C40EB5FE32F984891D0694B0EF362F574DDB6BA276773DE163C12D9C17B2A28C8B6292681CBAD39D1A563D719D2EA74BE6A6230DF9B768C6158CD484511F5DFCFE0480FF016A1F5D881EA59B49DEE49E228048AD41FA9D9389283A121B0004044E509B2E2526AFD585B2B2875A52C10CC6860DDE75B037744003D199EB21B4F43DFA0C995819F54740E92B38549F055260D58ACB2C3E0225E6E63B03C43F0D239EAB313738C69D02038FE970897FAEB178BD0E010F8C581EB9E47495324BDCA7BA4604166BAB6575E43B5E6EB975DFAAF4D4975AD1B88FDC7A483F756C4029DEB2624C04B5F68A089A420BC30C009E2F8F88916956A46E3DE0A8CF43F368476E240BF0EFB9CECE6E9B68A3D7BCB2E608460FD7F413752843B33BABEBAD1C4D88DDB115A4746252AC82E7A9B3B53F9C736E92745C4F008BB15F46F73A62E176AD2D81F5977B84349DF9C45C9447F1CD60B5648C1AD3457ADF5C389C84BAD9228B3A6F7341D0A37BD4DCD18ED2661B0C530E2B8C05085F3E19AFDFC9D724CE1AFD441B92E5E25AB4F00E4E27521C6368A64550C88A9AB372FF2CFEDF053EBA3AAF709E9E57925EB13F50424259EC4A9FB45ADFF84261E9AC518BABF27

F22CA2BD409774D48F6BA3CE040CD44CC4772E1C8D263F7B2FAE045FD4337F42EF7621AAE967EE4EA541AF7EFD3700267A5D5B5D77B7216D10E208AADBE6E7EC5E408099347A481F1A2FFB42A7E3FEE1C16E7E5C2AFDC7A3EF8973AB404B2A912DB18A2EDA21F1549CF73ECCB65FE9211202307F4AA5B5E35CE5930EB01FA8439CA7E191EFF4FB169F6B0DA1D8F8A682BCFA476E373E2320E697F8B4F22A7809C174D6186A705EEA7150DB7D33211B34D9FBC35BF5F45D67F01B6B73642CD4DB9EF839B56E3AE2FF3CE14329DDC8611C4FA799AC16D86314305FC5D6DD5BDA8CC29AF91E129D3F22E585172D9F2761CE473538580960D01571255AAA78BBB11A61665C71D68E0ECF3455825E2292C0D06F85EC5EAAB699FB49FB1D8B96A97AEF7E289DF7B4E86B8C635AB1969CE5592D4E9591E0C600AAEC834BB6A489FA0C878EF3077434F557EA54B03594B845A3807688E1D4F0496A2B5CB4FEAEF6E535B7604A09BF64E96B2DF6F4600DC156ECDFDBD8CE92C6FDBA6C8E9B67A3A4A7EC69A2CE3BEBDA82609E980FE5BE76DA6684D72647F26E766BF9F605DDDE6B70203E2486DE8FAF26161EECA97804C8FC91FDBE384712F4CDB89F377809B6225C76C7ABFD0AE294DE41FEEAAF8A7276A758E002CBBA5AEB3E102DD55C76F68D6FDA5913F7755044360BE031BFEABF11B51856F129725ABCFB4E4732F2CAAC513763D1519255A310D7D68161E57EB06026888CC8F8D903722DE4FA3F128CA01ED7CE14C08375A03023F4F20A515CB468C7E964A57462E9AFACF19A3B67C2EBBB71B718C826CC42DF890F60A8C1743AC54891DB9DC383AC6FCD334339897D745BC82BCD4B744F74DC7750088285E8B362CE6C1F052E7643DB603310881282F48A99716090B4CDDF844C40B79A6D3FD167109E56A41FEE69ADF92C50426F31C0CC03C32E8B7918D8957CFEB1D348639E0A59C055807018D789E6F686780CA5EC583641E0F8CB7764CB8CA1A6CB4AE95F527D842A050FC58CC30745A3A0A751DA171F4C826527949C0F63569FBF7D939699F425F56C5F2E3CA051CE1C587D6ECC37CCD08FBFEEBEB091921BC536B2A46117EEE1E78C32659E3F8B441FDC781D420C13E69E25DC573D76E8846A9584ECC56E0D7F7EC6A3F2A4E07798CB743F610C3425CB87085F7745E7607A587D8ABCF1B44DA7497B255FBFA94F2C5CEF8BFCE0512F8D174EC894923E6BDFC78C49EAFF99B81E72F2ADDB6AE5CE635F5F86C6C7A48CB27C5AEE8F9C99A32BD0315C2C914D4BA370C115370F6F3AF9103E6DC9026EC5AE13EDF4986AAD7121A8443AF47CEFFA04F25AD5C47D64AECFBABC688E4EAD3BA60EBFFF7332F2008DA6E7F90CBE064297440CEB99E7928B241C50C0DC2921816CF54B84BF1FA42164173D4626F0BCC6B0E73E1CB036247E04F8FBFF25D204DC5396
043A9D444F2646D58C86F189C9F93FDD5561633415D27B8D5F7544D1E8B94755171EAEA1112607EF8FE66031E540380B2F6A4572EFD469F9CF03EB5105F410644B913858C2D437E930171B7F594C47BB39BD73ADB1E4E7FA4253FD1FFF2DB8FFEAFE5A59E8F2BF445696556F1661C9FC94B1B15FCFA99277B9B511CB8699E69CC938A083D04DD0068102657AFBE95F0E88773D2A0C2ACA17359C0ECA5B33117D5A23F49FBB23CB45449F8111BAE4DE0119897BF50141F5ACFB4D35965CAC5099886744EE27C06D8B77B730B1B4FC05DA0906A43B33C32B756945A0B13FF36C15DFF141DCC46F8CEF97A7E282FA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F3.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
1 J
1 j
[
4
4
] 0 d
0.60000002 i
/Cs1 SC
0 0.21568628 0.4627451 sc
q
0 0 660 230 rc
1 0 0 -1 429 132 cm
-300 -96.552002 m
100 -96.552002 l
100 103.448 l
-300 103.448 l
h
-300 -96.552002 m
S
[] 0 d
0 0.21568599 0.46274501 sc
-75 -75 m
75 -75 l
75 75 l
-75 75 l
h
-75 -75 m
S
0 0 0 sc
0 i
/F1.1[ 16 0 0 -16 0 0]sf
-70 -33 m
(!"#$%"&'"\(\))[ 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 0.000000 ] xS
0 0.21568628 0.4627451 sc
/F2.1[ 16 0 0 -16 0 0]sf
-5.1601562 -14 m
(!)s
0 0 0 sc
/F1.1[ 16 0 0 -16 0 0]sf
-70 5 m
(*%+#\)$%"&'"\(\))[ 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 0.000000 ] xS
-70 45 m
(*,%\("$%"\(*-#\(")[ 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 0.000000 ] xS
0.60000002 i
0.69411767 0 0.10980392 sc
-275 -75 m
-125 -75 l
-125 75 l
-275 75 l
h
-275 -75 m
S
0 0 0 sc
0 i
-270 -34 m
(\("#.$%"&'"\(\))[ 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 0.000000 ] xS
-270 46 m
(%"/0$%"\(*-#\(")[ 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 0.000000 ] xS
0.60000002 i
0 0.21568628 0.4627451 sc
-75 -40 m
-115.1 -40 l
S
0 i
CM
305.89999 172 m
313.89999 169 l
313.89999 175 l
h
305.89999 172 m
f
0 J
0 j
1 0 0 -1 429 132 cm
-123.1 -40 m
-115.1 -37 l
-115.1 -43 l
h
-123.1 -40 m
S
1 J
1 j
0.60000002 i
0 0.21568599 0.46274501 sc
-75 40 m
-115.1 40 l
S
0 i
CM
305.89999 92 m
313.89999 89 l
313.89999 95 l
h
305.89999 92 m
f
0 J
0 j
1 0 0 -1 429 132 cm
-123.1 40 m
-115.1 43 l
-115.1 37 l
h
-123.1 40 m
S
1 J
1 j
0.60000002 i
125 39.742718 m
84.899887 39.548058 l
S
0 i
CM
505.89996 92.490776 m
513.88531 89.451981 l
513.91443 95.451904 l
h
505.89996 92.490776 m
f
0 J
0 j
1 0 0 -1 429 132 cm
76.899979 39.509224 m
84.885323 42.548023 l
84.914444 36.548092 l
h
76.899979 39.509224 m
S
1 J
1 j
0.60000002 i
75 0 m
115.1 0 l
S
0 i
CM
552.09998 132 m
544.09998 135 l
544.09998 129 l
h
552.09998 132 m
f
0 J
0 j
1 0 0 -1 429 132 cm
123.1 0 m
115.1 -3 l
115.1 3 l
h
123.1 0 m
S
0 0.21569 0.46274999 sc
130 6 m
(\("#.$12\)"\()[ 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 0.000000 ] xS
130 46 m
(%"/0$12\)"\()[ 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 0.000000 ] xS
0.69411767 0 0.10980392 sc
/F3.1[ 16 0 0 -16 0 0]sf
-231.112 95 m
(!"#$%"&'\()[ 8.896000 8.592000 3.552000 3.552000 9.488000 8.592000 5.040000 9.184000 0.000000 ] xS
0 0.21568628 0.4627451 sc
-46.368 95 m
(\)*+&,-"\(.*++)[ 7.408000 8.592000 8.000000 5.040000 4.448000 11.552000 8.592000 5.616000 8.896000 8.592000 8.000000 0.000000 ] xS
0 0 0 sc
-121.48 123.448 m
(\)*+&*\()[ 7.408000 8.592000 8.000000 5.040000 8.592000 0.000000 ] xS
1 J
1 j
0.60000002 i
0.69411767 0 0.10980392 sc
-275 0 m
-315.10001 0 l
S
0 i
CM
105.9 132 m
113.9 129 l
113.9 135 l
h
105.9 132 m
f
0 J
0 j
1 0 0 -1 429 132 cm
-323.10001 0 m
-315.10001 3 l
-315.10001 -3 l
h
-323.10001 0 m
S
-423.63199 5.776001 m
("//*0&1\(*2*/&)[ 8.592000 8.592000 8.592000 8.592000 9.488000 5.040000 5.328000 5.040000 8.592000 3.552000 8.592000 8.592000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
