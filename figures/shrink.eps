%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 672.000000 394.000000
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 672 394
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 672 394
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: SourceCodePro-Regular
%!FontType1-1.0: SourceCodePro-Regular 1.0000.1.0100
14 dict begin
/FontName /SourceCodePro-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /r put
dup 34 /e put
dup 35 /q put
dup 36 /u put
dup 37 /s put
dup 38 /t put
dup 39 /underscore put
dup 40 /I put
dup 41 /R put
dup 42 /p put
dup 43 /o put
dup 44 /n put
dup 45 /j put
dup 46 /x put
dup 47 /a put
dup 48 /c put
dup 49 /h put
dup 50 /i put
dup 51 /k put
dup 52 /d put
dup 53 /b put
dup 54 /y put
dup 55 /v put
dup 56 /A put
dup 57 /m put
dup 58 /l put
dup 59 /g put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -25 1 index div -285 2 index div 706 3 index div 952 5 -1 roll div]cvx def
/sfnts [<




10B900170001F4B8001310B9001A0001F4B8000910B900220001F4B8000510B900250001F43031171523113317333E0133321E0215140E0223222627371E0133323635342E0223220607AF5244070322592D314B331A243D502C224F210223461942541021342420492629A402B33E202A23415B393E614423211E3F1F1A665B28422F1A232600000002003CFF3301FB01F200160024008300B800004558B800052F1BB9000500073E59B800004558B8000B2F1BB9000B00073E59B800004558B800122F1BB9001200033E59B800004558B8000D2F1BB9000D00053E59BA000800050012111239BA000F00120005111239B8001210B9001A0001F4B8000F10B9001C0001F4B8000810B9001D0001F4B8000510B900200001F4303137343E0233321617333733112335370E0123222E02371416333237352E0123220E023C253D502B2D4623030742520420512D304D381E554B444841213F2020372918F23B5F4224222036FD4DB3581F2B22415E3E586249F21F1A1B3144000100920000021801F20012005400B800004558B800002F1BB9000000073E59B800004558B800062F1BB9000600073E59B800004558B800112F1BB9001100033E59BA000200110000111239B8000610B9000D0001F4B8000210B900100001F43031133317333E0133321617072E0123220607112392440703266F441B2D17111A241D37652C5201E6733B44090B4709083F4CFEE300000000010048FFF4020E01F2002D004900B800004558B800132F1BB9001300073E59B800004558B8002A2F1BB9002A00033E59B900030001F4BA0006002A0013111239B8001310B9001A0001F4BA001F0013002A1112393031371E01333236353426272E0335343E0233321617072E0123220E02151416171E0115140E022322262770295E42424045592643321E1A334D3237682428204E2D222E1C0C5242635F1C37513448792D761E242C201C2C16091A232A1A1D332515251935171C0B131A0E1E27111940381E3428172D1F00010045FFF40221026E001B004D00B800052FB800004558B800032F1BB9000300073E59B800004558B800162F1BB9001600033E59B8000310B900010001F4B8000310B80007D0B8000110B80008D0B8001610B9000F0001F430311323353F01331533152315141E0233323637170E0123222E0235CE898C0B44EEEE0C1C302323381A1120502835482B1301A33E05888843E7213122110C0A3C0C111D354A2D0001004DFFF401F901E60014006500B800004558B8000A2F1BB9000A00073E59B800004558B800132F1BB9001300073E59B800004558B800062F1BB9000600033E59B800004558B800002F1BB9000000033E59BA000200060013111239B8000610B9000F0001F4B8000210B900120001F43031212327230E012322263511331114163332

00>] def
/CharStrings 28 dict dup begin
/.notdef 0 def
/A 1 def
/I 2 def
/R 3 def
/a 4 def
/b 5 def
/c 6 def
/d 7 def
/e 8 def
/g 9 def
/h 10 def
/i 11 def
/j 12 def
/k 13 def
/l 14 def
/m 15 def
/n 16 def
/o 17 def
/p 18 def
/q 19 def
/r 20 def
/s 21 def
/t 22 def
/u 23 def
/v 24 def
/x 25 def
/y 26 def
/underscore 27 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-25 -285 706 952} readonly def
/UniqueID 4158941 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB281EA889C2D878C3AD50E8F3FE62C0EE5F6306EABD6A13240585D9163FFBCE71C6E25AF1637A69AB699C4E6477FD2509AA5FBDF0A2BDB63D23C4F950929480DDD201D7BD9198AA13890BD2425C50314A61DDDDBFF33E7EFCE65CAA76409EF48316AA255573E61571B6D260BB2703C6C32C0570763730D80DF55280A6E5E1668524A4D5D14D0B8D5B3ED3707129480D9755EB3DB6F2C3BCB719772952FDCCC6D6EEBEEB67FAB7F2CAB09B436D5F8604A9AE0F6F5E38CA9BFEE02490E6D34336D93A9EF8DA070084DAC05689496757D941521315B89722A238F4349A8AF1E61A3F671E3A66414053328DA28F4BF6A8A08C66BD549051BED855B48EFB18B59A89AF1616629B45E05B7165819FB9C429C157B1683D9288CF8AB43F782C9AF1CB6020E6EE14E8DAB1975F994CEC11F3E1628073280EE57A3D033AC449DBFEECD0D092CD023D9AD59B3A5F77740C4F7926E103E7BF1C39547432EB26F403E5689521F327067665B9C28F2DD5C6161B5D083C4124060757DEFB4CC33AFD0D61AAF4B0D4D7131F29D20754010217BB660E79D87C40C7025D75149519935D5726046DDEE92C2AF19DD997D61B79F7B793DDE2354398164EF6CA5D0D6049EB6B0E4D13319716A6070C7AD578B5B8E1EE7756E6A4904B4FD2A1FB6B1D35C53A07E263C482D582E376EE5F42880AD61F1F460679AEF28936A081CA9B2D7A0A333E714105B5AC14CE3BB8EF39658ACE3404E18FC5F5D1EB673250EDB808ABE9EDF89CB1951D6BD02681A72
149F2FEC99ABA7228C960C8C00654A7A1AAFF6F97E60795D966954B08CDD9CD01677EBC061AB0D548BDC6DD03356C231123010EB4EF61E18181FD6F11BCFA8EE7E6D3C81E42626C84987F8A06F1A1052EA27CD4C28BE01CDE68023270AA009E3E500D89AF9D4CE36FA3C62F176B6DE193A5D381BC2FFBC76FD260F6474EB3406339D66113A3B4C56D82500A861C6F82FFEC65DB20AB1EDBB89837491C8B285FF0DE326B0A6A4F10AFA9B08B31FE173967743F5C2A5C3CE79F28C09B3D3928A4E533C233576C02281496D820872A8A3C32B9ADD0A14E48A8A38F2814C1DBA50EC2B82E74FF91BF18044293D93A6AF5EF0C5DB05EC3AF1AEB8554D0FD925DF76C9DAA28DEC8CCB8076B264C982C45BF2647D0A90A78D28324BB60C202669EF8B1EFB51F6A7128FF769AE974229C76CCF810D36B8A78FAC8335D5315C928BBCB24849727AF569BCA63FC749D61F354B73C57001F9FDAE0C9C777B73A80EAFB6ED3041CC6E459D911C9E0BCE89D6027739DCDC210CEF50A5BA1DDF45850502D142B6F2AEC3AB792D67E45E24571C0B92D633F490183DEE151F395D24CFF6B2647D89C344855E5573979B35A3CE85A6B0AD9F11A6165779473D18662062DDAC9B8A9644026F029BC0B5F3C7CAC615C6E76E92CFD7B821760BD71019BCA90192782988DD800CC9020130154344C33D5CD35074EF8BAC52F15DBCC45EA1FE7C874078AF8C6DC99387BD71C7607763E5F4304608B2DE5BF888AF306478BA25C27A1A81BA5EF8D8AF6179A98C153A89256E68B610B115A681EFA22B13C1DA91D42577F9FD8334E78AD549EFE00C300362B114864C24F7C60550047C82C24257D11F3386668E9111ED2CFCE4421ED3E16D3A9072BF4637C8BD4C817B7C71C205A5FF77169B644EA303419A5E69C96F08B10AF1214BB4AC97B130CC4CFB4BCA18837E69E85EAD40A2EB75639525294F103A40ED1B8ED766DCF1F3796D3C24B74A9238F365BD57CB599BEA4E663BDBDC6F3860A192ED8A0F185C8F0A105D88C2DC814BD6C1C71F57159E7BA2BCE726182A7741E5D16A4595C3D495B94EA1AD90B5B69DB333845694572EBE315D49AB324F895E0350624F4EEBEB7CF45C5A2D0497BA310F0B2605AFEF4C27985E0202F72D3B8C75834AF755BBD7375AB19D82962D10D937D4D402AF2519F054DADDB9306F8F2E68E28FAE3AFA32F22ECF7510D1E4557C9747A178F5EEE0DDBA7FF803F53C8BB3145BE16DD42E10F73B155FF1D818A78B766ADCEDE78D71693067B1521608978A6714A95192D87AE12F323BA7906E54C21AB33B62ED7253174E3D7A3146D93B863261F2BCD8E37084462ADE49A9BEDE014548B25A5FB7D9ADE947BEFD5B3905608131E84BA75126D274ECCC25DE3B12B62879915DB7E5760F2B17899A103953A8F5C9F1CDF4ECBB43BF8D20A011778E66B366DB

0C433A4F0F630917EAC8AB682B1782B5704ACAEF15F762C96CF9665EBD1705148772BE6E8166D210534C0BEF31FDEDF5911C7542F4EC06135D97E1A633B23D83F1602AEF85EEDBB5E8E6BBCC0CD2C44FCEA1ACBCBC2A27490AA4C00E88888E087F7F6A269C2BA30130CDB17661766539BD77EB63243D64CC73CEC3C1197BDB799039E790928B3E2BC24A8A17012CDC252CA19A214317DDA46269C13E0168D842C0D870CB02D687B5B1FBB25A4E528F55CEF1CDB7E394190B0F8690A17D7D9B10522E3D4BED5E171AD6B993F9806C84D6A96F30059D3D7BFF3C221176D8762198671C7CF64F29FF5C89E0F209A6B18717977C6367135288EF4904989A2EE43B83E57D2808D804012E06B52D38410C179C4ED4CB226917EF67A3E3396D861E724BF6981E0282F62DFD0F72B40CDA2CC8382B140279B89A5204AEA50F0110ACBAD073FB20CA12530103485D3D64C875481A12FCF0C2767223E2FABB3A8B1AE608F29EA06CCDEBC8AA6762ED04F5E27149B3FBC2DE3107444D3312FE5521644BD965467C402DEEDE0B735886E1C3EB6FD3B9C325B206C673B4B4C62AD18415058D83E273F37C0E0A43D04AC54EE9F94F21577CCC210A6AAF07A4424C2A5E291988EADBA10FEFABC29AA89D3C5EC99FAFA47E234F4FCB5EF15F8973B0B3568DCC5FB4324C3D86A29F6517090FAAA937AE32E044060C12C2B3174E3FE6EAEC9408DA5A7CCBA9C44393024543CDF0FDDBDEBDFFC3464F0E8B5F777938F45975C8483C753CDA337F85C94AAD7FE22B656611789AEDC78B96FD451264BCEE113EF26EDC8F0A6B81332498C09127068DBC497BE84E463566EA7A5A5F4F50FCF5A435A39880E49E19EE9BEE993270E80AA57ECFE499BF47FCCFA77988A9062F607868A0CCB24DD700FF26894A9452421B6AB40675B3EADA496E5E8F8C9CD52CC1DD763BD952D75D14B88F4D3BF3E46512BF834D13F399F86C59A719D8DD972BEBD5FAEB0843F57FF698B3F0C5D38E6217387B75C60FB2C4490FBCBCC77F6BCE092F55880E505A9E91DFC7461000096338B2B404364C6F63338362EC9128D2901B9509F416F012119BB17B145E6674F7BEAACE3AEA21B3B2F65CCFDEF7DBCB36CF7CAE6DF2F63ECFD95410A62468FA7962F328EAD37E20C7734795D34A49B7259D2EDE8EC5AF87D4CCFD76C8A478E3BD69362BB7174DBA30F9F39F4DF496D4303A87078AE6BE2830792658307C344783E53EB6CCE98AF027338E5DE41DC43A5169B1F9AC40379ABB47D6BF9D49A1DD10A4099F4BC377C9FA735A1E4E1051A77D8D95C62BB72B83FB3D4502C67486C70FF62E102A368C3BCB6CD438A11D5E5153A16B6E09332F7AB1836D3D3AB3C9AF9654E445C066EF1CB0B42BF7258776397F8E116C77971CF72C3A2CB22612096F87B08FB88FC166039E2A58EC52FF31B8154982074684D2
2263EF57594ED2FAE03DE59D1787B29DDA7866E6A6E88B176F751562274220F2B45D274363BEFD258C348BD8774E8182C8470E126FF02A934A965F262560448FC9E04E8F8E7862928CD124194AAB398C37653DD5792A437B6C69C72856ED447D7BA9C65BD224163034A79BFBFE201A3CAD185031EFE1FC9212463F0A43674E92FFA66DAFCB72D07D487441E044F9243147651E87CB76EC09EE100CE283189858DAFC42D170DD79D21CC53FBA2F6598972B66EC74109A31B015B33DE098E3ED4DDC66D46B503451E39B2FEDC5CA1FF5D58F639261391356EDB14EBDE03CE662BC8BF222A94FE974F0DBC461AF36DAC1C1A5D94888439D930712F07BFE32228EB073D18B59CF1D8F59A02D1835AC1E212594F51754278D68388D8BC5AC60FADF97238848D36D3233C2A46BB846F747D41BC7D2C53E6ECA4E975965DB7B05163549545E3DD21885109B4EF51839CEFF3399F41515FA9829A73E57A9EA07096E5F9E06D24D41459100A5F4CAA72D0505F14C00A104A4ED735591DEBF2B71417DCB8E073D1923FA8EB9C49B12FE9E1C78749680B10E7D66426C24AA212056BB9A8B8C90BBDF99800FDAD240673E367A82C9973D829554680C1567F8747F8398282BFB7E99D0C8085479AA0FD0B67EE040C13E9DD4F9DDDDFDC730B99F13E88205C0A5ADF422D5571378F3992DCD05761FF2E606C882D65F64960C13DCC5269222D835B5760E3689CAC3B574114AEE7741B862C98516089945A695F4479AC7BAAB7FFF6DC3AAA0BAC2A05FB27DDB104D7D2D500EF1FF8ED5ACB68D797F7E92A53BD3EE20EDDAD9DE305BCD3C29B0B5700BF6389B33A88021B70DD095981ED4F316C432739C329F5CBE78DC94453AD284B1C894F26645FBF95923A0AD9E0ED0155CB389F3A681C7892DB6CBC74DCC5BE3478CF8EFA289AA423F7B58BE2AEE8C4905FBBB3703AAE21B3D88586D5543071E3CD2B7D4AD2D707F292B5FBDC73A1F0CCA3B82821F48AE700222AB9BB842AD94FA094AD645A09895E8D7BE766F0C8FB661AD1219FA6D9F1EDD0C1F09234443A7E2B8B73ECF535EAD717999463BE1E6A8A2B3AC7C3BAEC880B5BABE7DD938C8E8672BB2ABD87A118D69FDCC9C47AAF479B73085DE8524F019EE94B01811EC1726660928129E3F8421AD3C9331F52C7D971088C75D1888EDF45395CB4995C8C1824191B6F4202A105D860328DDDC1C12F4591A4AADC721DB6C80A61DF0D77F48FB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/SourceCodePro-Regular cguidfix
/F1.1/SourceCodePro-Regular renmfont
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /V put
dup 34 /a put
dup 35 /l put
dup 36 /i put
dup 37 /d put
dup 38 /t put
dup 39 /o put
dup 40 /r put
dup 41 /T put
dup 42 /e put
dup 43 /s put
dup 44 /space put
dup 45 /H put
dup 46 /n put
dup 47 /E put
dup 48 /v put
dup 49 /m put
dup 50 /p put
dup 51 /c put
dup 52 /hyphen put
dup 53 /fi put
dup 54 /g put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<






00>] def
/CharStrings 23 dict dup begin
/.notdef 0 def
/space 1 def
/hyphen 2 def
/E 3 def
/H 4 def
/T 5 def
/V 6 def
/a 7 def
/c 8 def
/d 9 def
/e 10 def
/g 11 def
/i 12 def
/l 13 def
/m 14 def
/n 15 def
/o 16 def
/p 17 def
/r 18 def
/s 19 def
/t 20 def
/v 21 def
/fi 22 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4111738 def
currentdict end
currentfile eexec

C810659E91BABEB687BD0B6D8798FE231DBB5991F0961A1B9AC119251BB5B280F2021B5041075C61A27548E52534B2D4FFC71B62D3BAE5436174776ACDF04DB774D8EBED18AE7DD1BA7F5E0DADDEF8BD04BFCCC37E6953F57DC034D0A43F4197D09B844D08E608A3BFC1AD7991F9E999BCE304F3B6C12CB961F93DC7D53DB0A62EE415C2EBA8A9E277E4CF4CB6117F2426843AC4BDC86B126EADC717B7141E2618C806FFA23C1F2A204BB29927E429D70C13F0EC40357986BFD7AE436F930D53C84E5EDE58ACCADEB7BEDB30CD52C0F53626D847B47CDB1544AA260F53AC5F993F3ADE75E76E235FB4625B872EEFF1011F824787715D5FF9653DE88687AE494DD80DCA1FFC9A2171AC4395DFB6F791AB2A7BB7199997CCAED6C9A94D460EBF04E1679BD7BF84005CB9FE3E20269DC1303A8F68CE1E11E1201D33F796A04032D104DCDA910B5B48A6932007FEE0AE82E7141B95D774C00CA00A256FA65A29D419D503F743EE25F0DF218E8FDDE33845C0A927DF9A2CB0560190F0F492F2E059B8E18475CF02CBDA5C8045710E21D01989A43347B23008E7745EDFD55ED4EDD3E6FF6FCE31F14DCEECE45466BEA17EF2A616E692E9C7144EF94BDE84C47A2B824C32681421FE64827CB0CCB6B51B10655547C22195C7FB93D781CFAB215661EA6EB339F562E7F24655B8C735819536ABB8B26F667271D537E557647C69F67D83B972FD9892FE04AAA79412BF3983A71E0806A175042427E81D45C0A680440AF7B2AF1C2A20E2640283A74CD140BCD90C971B775AB98D0DD762EC8FD05A4E17C119F6F7ACCF1819223805AC3D8D45CC2B4193F1EEB73E05637665565DD33B422485916413B686ECC1CAFB8DF6ECB6C78DF244D3CE15B41194FB8CC4465ACE5209BD95E1766F1C8713C15F7B369AAB2623E851926AA800DC5BE1BE83FDA98C16E2C85C27552E7B928F37F9D0E98177B20EDDB76ECB04966F795086FE43DEF7EE87E92C16094C2ACC8119E7628C0DFAFE63D4E0A075E5444462ED7F1AC64088628E11635ADB55FE7C84BBB3E3727055669E78AE737A7B3D5924C2644DCBC4E30CC00DE280991E16F3F4BE35A797D3F7769758284A66DB41A32770EF2684769DC0F31260492020EFFF4B44D9DF8291DDFC4F4B56251DA7EFFCCB1CAE346EADF1AA81E2C6B1F8EFE34DD4E9D5869B7F42C0D0605156EE8DAE5859E698C2A43B7717B0933276BCF58B07BB1ECD0090E635C73E5EC9009A87BB439E92CBFF8F0B7C1416999D4148768D5B2E4BE4AD29818E7F4C08898D7BC997960AA3578CDE18073E9731C4C0A0EFD5EB15D9D80C1C0A6CB3FAC67710A6A5D7434130E3D59D1484429A4C54F0B04304CB0E46D481E53802E70F42839BA37555CA81202552EBCD7F1A4500689C1F30B8A0D40A2D3EB9F05A60EC91913F8066FEC5D1238CB7B81A78178758

1E0F64DA1DDDA2CD996D3CF3E0A42469189C0D05595B10942E5E629758DB327FB11A8D4272776FB8E3CDEA44D22016292C63775570609B504214F69CAB2DC266249173A1C67440C47B01663C8593C183CC2C8E83D2AA048268273067BA759181C8F0887C6E15721216900AB637787F454129E6B5989A9681850B7D879DC521033FA6E74EF6B3AD6416AAC954C9D657147C4096E0DF171A4A7EBDB21D20989FCFFF70F06BB651CD735AEA190240707AA119BCE711E12EA3AE24F1152EF4421441ED5FA96CB58E240B898F7F1AB6811FD0864E315AE107FFBD657CB95F709D55C6B5725C280755C24E05AED36515438F2557B95DEC860C86147FD4D7CF341F42A4B46A9F3D5AEF03AF444F9551582F31381F24F1B813C7D052D8F0D1C3363B210FDD28CA6F02E63381B5DF53E3798650D654B9FCCE37ADF86E205281F2EA3F18A2B32869277ADF040590CB06B99762E844ECFC3699F0D2DBAE2E8A8B406E8BF241037460CC6C53DBFC73C5DD5EBB04A86428F40E7212BC27DADFC6470433C4D8CE8D353B833A9245250255E902F4AD3BFABDE63762D53E4812DC805BD9A1397F9826F02DF0C1EB3692AE5263AE6488E5E4B11D0D753881E98767B5691771221AE4B9DC781B38A1D5484B067557AE6E506E417E6D688A62202D2C85962E2368EA54D1CFF71F7978ECBEFE591C73C3E340A237A6C49B904866B529E45AF31B604F4C55458391E788EBE3D99758137A706115FBBCCFBF29EFDB55B39DB1EB509918A65466E8C54C2101C0946D79405F31DFBE17293489A2D959A81B2E8B97DF7A57FD12F1CD30BF943A8E1F24B7880EFB8EF2ECF38ED18795943D800515F474ED4D808BE91D142EECB59A24E2D8007D3240C3FE5BB3F77D9B16E61D7D9EE4FD8E829F7B521721D8DC00F61C1A8441564047951CBEBDFD288E5E82BB6318FA657A4CD5B448DA4A88144F03896722F5D029DDDDD115770F8C4797850786F790AE366D4407420462B23441A9873B5F7DA055497B8FAC7A969DE8C2B9AE78C72C2A3EDA41356067805133A761B20A8C8A43E47307560B985C76B1B7C7B6128BC91D26ABD441434941377BADB874037B820ADEA993D67610A5EC27F738585146192CFAD36C38CC55ED58EB3F6AF458F081AFAA9E7B67B2CD5FBD5E43B13B47B2AFEF24CCBAC104F9D6267BCA31DD5D77075188EE7AD7AF7A7EE28A533782935AEBFB5C7D796BBB426C1A53320013B2EA25C518141E6464360EE250AE8C35F41820FFAEE87BB999A091A86B9696816C80EF31D1072B1FA4E55369C97FE3BDC3424BDE0FA8591ED9433868A9F3AB2CB902E6CE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F2.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0 0.21569 0.46274999 sc
q
0 0 672 394 rc
1 0 0 -1 341 243 cm
/F1.1[ 16 0 0 -16 0 0]sf
-48 -94 m
(!"#$"%&'\(\))[ 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 0.000000 ] xS
-52.799999 106 m
(!"%*+,%"'\(\))[ 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 0.000000 ] xS
-119.2 6 m
(-".*)[ 9.600000 9.600000 9.600000 0.000000 ] xS
76 6 m
(&!/0")[ 9.600000 9.600000 9.600000 9.600000 0.000000 ] xS
1 J
1 j
0.60000002 i
0 0.21568628 0.4627451 sc
-75.800003 -1.4291527 m
-60.163277 -3.8688562 -40.008286 -9.9917145 -25 -25 c
-10.191346 -39.808655 -4.0333138 -59.628006 -1.5284745 -75.173653 c
S
0 i
CM
340.44144 326.11401 m
336.49359 318.53677 l
342.44931 317.8093 l
h
340.44144 326.11401 m
f
0 J
0 j
1 0 0 -1 341 243 cm
-0.55857122 -83.114021 m
-4.5064163 -75.536781 l
1.4493176 -74.809296 l
h
-0.55857122 -83.114021 m
S
1 J
1 j
0.60000002 i
71 -2.2734439 m
56.197205 -5.1774788 38.5126 -11.487401 25 -25 c
10.191346 -39.808655 4.0333138 -59.628006 1.5284745 -75.173653 c
S
0 i
CM
341.55856 326.11401 m
339.55069 317.8093 l
345.50641 318.53677 l
h
341.55856 326.11401 m
f
0 J
0 j
1 0 0 -1 341 243 cm
0.55857122 -83.114021 m
-1.4493176 -74.809296 l
4.5064163 -75.536781 l
h
0.55857122 -83.114021 m
S
1 J
1 j
0.60000002 i
53 -90.104172 m
60.781212 -86.496773 68.389793 -81.610207 75 -75 c
89.808655 -60.191345 95.96669 -40.371994 98.471527 -24.826347 c
S
0 i
CM
440.44144 259.88599 m
442.44931 268.1907 l
436.49359 267.46323 l
h
440.44144 259.88599 m
f
0 J
0 j
1 0 0 -1 341 243 cm
99.441429 -16.885983 m
101.44932 -25.190702 l
95.493584 -24.463219 l
h
99.441429 -16.885983 m
S
1 J
1 j
0.60000002 i
57.799999 87.697014 m
63.886703 84.40107 69.757355 80.242645 75 75 c
89.808655 60.191345 95.96669 40.371994 98.471527 24.826347 c
S
0 i
CM
440.44144 226.11401 m
436.49359 218.53677 l
442.44931 217.8093 l
h
440.44144 226.11401 m
f
0 J
0 j
1 0 0 -1 341 243 cm
99.441429 16.885983 m
95.493584 24.463219 l
101.44932 25.190702 l
h
99.441429 16.885983 m
S
1 J
1 j
0.60000002 i
-75.800003 4.7497973 m
-64.739243 7.4000301 -53.353294 10.976048 -50 15 c
-42.917374 23.499149 -60.834751 34.249577 -75 30 c
-78.832397 28.850281 -82.421013 26.126766 -85.617233 22.765192 c
S
0 i
CM
250.41728 226.51004 m
253.02885 218.37494 l
257.73401 222.09805 l
h
250.41728 226.51004 m
f
0 J
0 j
1 0 0 -1 341 243 cm
-90.582718 16.489965 m
-87.971146 24.625057 l
-83.265991 20.901949 l
h
-90.582718 16.489965 m
S
1 J
1 j
[
4
4
] 0 d
0.60000002 i
0.69411767 0 0.10980392 sc
71 0 m
-65.900002 0 l
S
0 i
CM
267.10001 243 m
275.10001 240 l
275.10001 246 l
h
267.10001 243 m
f
0 J
0 j
[] 0 d
1 0 0 -1 341 243 cm
-73.900002 0 m
-65.900002 3 l
-65.900002 -3 l
h
-73.900002 0 m
S
0 0.21569 0.46274999 sc
-78.800003 56 m
(%1!2,3)[ 9.600000 9.600000 9.600000 9.600000 9.600000 0.000000 ] xS
-126.8 -44 m
(2,%&/,&2/&")[ 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 0.000000 ] xS
105 -44 m
(/**",4)[ 9.600000 9.600000 9.600000 9.600000 9.600000 0.000000 ] xS
105 56 m
(/**",4)[ 9.600000 9.600000 9.600000 9.600000 9.600000 0.000000 ] xS
230 -94 m
(%",4'56&"%)[ 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 0.000000 ] xS
1 J
1 j
[
4
4
] 0 d
0.60000002 i
0.69411767 0 0.10980392 sc
53 -100 m
215.10001 -100 l
S
0 i
CM
564.09998 343 m
556.09998 346 l
556.09998 340 l
h
564.09998 343 m
f
0 J
0 j
[] 0 d
1 0 0 -1 341 243 cm
223.10001 -100 m
215.10001 -103 l
215.10001 -97 l
h
223.10001 -100 m
S
0.69411999 0 0.1098 sc
112 -109 m
(*!2,&)[ 9.600000 9.600000 9.600000 9.600000 0.000000 ] xS
0 0.21569 0.46274999 sc
230 106 m
(!"07'56&"%)[ 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 0.000000 ] xS
1 J
1 j
[
4
4
] 0 d
0.60000002 i
0.69411802 0 0.109804 sc
225 100 m
67.699997 100 l
S
0 i
CM
400.70001 143 m
408.70001 140 l
408.70001 146 l
h
400.70001 143 m
f
0 J
0 j
[] 0 d
1 0 0 -1 341 243 cm
59.700001 100 m
67.699997 103 l
67.699997 97 l
h
59.700001 100 m
S
0.69411999 0 0.1098 sc
109.8 121 m
(*/!%")[ 9.600000 9.600000 9.600000 9.600000 0.000000 ] xS
-297.20001 106 m
(!"07'8\))[ 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 0.000000 ] xS
-297.20001 -94 m
(%",4'8\))[ 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 0.000000 ] xS
1 J
1 j
[
4
4
] 0 d
0.60000002 i
0.69411802 0 0.109804 sc
-53 -100 m
-215.10001 -100 l
S
0 i
CM
117.9 343 m
125.9 340 l
125.9 346 l
h
117.9 343 m
f
0 J
0 j
[] 0 d
1 0 0 -1 341 243 cm
-223.10001 -100 m
-215.10001 -97 l
-215.10001 -103 l
h
-223.10001 -100 m
S
0.69411999 0 0.1098 sc
-184 -109 m
(4"0+4")[ 9.600000 9.600000 9.600000 9.600000 9.600000 0.000000 ] xS
1 J
1 j
[
4
4
] 0 d
0.60000002 i
0.69411802 0 0.109804 sc
-57.799999 100 m
-215.10001 100 l
S
0 i
CM
117.9 143 m
125.9 140 l
125.9 146 l
h
117.9 143 m
f
0 J
0 j
[] 0 d
1 0 0 -1 341 243 cm
-223.10001 100 m
-215.10001 103 l
-215.10001 97 l
h
-223.10001 100 m
S
0.69411999 0 0.1098 sc
-184 121 m
(",0+4")[ 9.600000 9.600000 9.600000 9.600000 9.600000 0.000000 ] xS
1 J
1 j
[
4
4
] 0 d
0.60000002 i
0 0.21568628 0.4627451 sc
-200.5 150 m
-200.5 -150 l
S
0 0.21568599 0.46274501 sc
186.2 150 m
186.2 -150 l
S
0.69411999 0 0.1098 sc
0 i
-335.60001 6 m
(9+4":'%&/&")[ 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 9.600000 0.000000 ] xS
0.60000002 i
0.69411802 0 0.109804 sc
-225 0 m
-134.10001 0 l
S
0 i
CM
214.89999 243 m
206.89999 246 l
206.89999 240 l
h
214.89999 243 m
f
0 J
0 j
[] 0 d
1 0 0 -1 341 243 cm
-126.1 0 m
-134.10001 -3 l
-134.10001 3 l
h
-126.1 0 m
S
0.69411999 0 0.1098 sc
-169.60001 21 m
(;",)[ 9.600000 9.600000 0.000000 ] xS
0 0 0 sc
/F2.1[ 16 0 0 -16 0 0]sf
-294.71201 170 m
(!"#$%"&'\()[ 8.896000 8.592000 3.552000 3.552000 9.488000 8.592000 5.040000 9.184000 0.000000 ] xS
-46.368 170 m
(\)*+&,-"\(.*++)[ 7.408000 8.592000 8.000000 5.040000 4.448000 11.552000 8.592000 5.616000 8.896000 8.592000 8.000000 0.000000 ] xS
233.24001 170 m
(/.0$\('.1*.&)[ 9.776000 8.896000 8.000000 3.552000 5.040000 9.184000 8.896000 13.648000 8.592000 8.896000 0.000000 ] xS
0.69411999 0 0.1098 sc
5.0000014 205.776 m
("22#$3"&$'.4+2*3$53)[ 8.592000 9.488000 9.488000 3.552000 3.552000 8.592000 8.592000 5.040000 3.552000 9.184000 8.896000 6.224000 8.000000 9.488000 8.592000 8.592000 3.552000 8.288000 0.000000 ] xS
1 J
1 j
[
4
4
] 0 d
0.60000002 i
0.69411802 0 0.109804 sc
-100 200 m
-9.8999996 200 l
S
0 i
CM
339.10001 43 m
331.10001 46 l
331.10001 40 l
h
339.10001 43 m
f
0 J
0 j
[] 0 d
1 0 0 -1 341 243 cm
-1.9 200 m
-9.8999996 197 l
-9.8999996 203 l
h
-1.9 200 m
S
0 0.21568628 0.4627451 sc
5 234.224 m
(6*.*\($3)[ 9.184000 8.592000 8.896000 8.592000 5.328000 3.552000 0.000000 ] xS
1 J
1 j
0.60000002 i
0 0 0 sc
-100 228.448 m
-9.8999996 228.448 l
S
0 i
CM
339.10001 14.552002 m
331.10001 17.552002 l
331.10001 11.552002 l
h
339.10001 14.552002 m
f
0 J
0 j
1 0 0 -1 341 243 cm
-1.9 228.448 m
-9.8999996 225.448 l
-9.8999996 231.448 l
h
-1.9 228.448 m
S
ep
end
%%Trailer
%%EOF
