%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 712.000000 166.000000
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 712 166
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 712 166
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /N put
dup 34 /e put
dup 35 /t put
dup 36 /w put
dup 37 /o put
dup 38 /r put
dup 39 /k put
dup 40 /space put
dup 41 /M put
dup 42 /d put
dup 43 /l put
dup 44 /S put
dup 45 /v put
dup 46 /y put
dup 47 /m put
dup 48 /b put
dup 49 /i put
dup 50 /c put
dup 51 /C put
dup 52 /p put
dup 53 /s put
dup 54 /n put
dup 55 /O put
dup 56 /D put
dup 57 /u put
dup 58 /a put
dup 59 /z put
dup 60 /T put
dup 61 /U put
dup 62 /fi put
dup 63 /B put
dup 64 /g put
dup 65 /I put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<







120F01414B00000000010040FFF501EC020500180051BA000C000D00032BB8000C10BA0001000200032BB8000110B8000210B80016D0B800162FBA001700020001111239B8000210B80018D0B800182F00B800012FB8000C2FBA0008001300032BB8000810303121112311140E0223222635112311141E0233323637331501EC5513263927313855112A443339541B020205FEDC233B2C183830015EFEAC2A45321B2D30520000000001000E000001E602050007001900B800012FB800052FB800002FBA000400000001111239303121132303230323130129BD598D02915FC00205FE5101AFFDFB00010011000002E50205000F003500B800012FB800052FB800092FB800002FB8000B2FBA000400000001111239BA000800000001111239BA000E000000011112393031211323032303230323032313331333130240A55874026C5D6802755EA65C6802690205FE5901A7FE5901A7FDFB019BFE6500010008FF3101EC020500160086B800142B00B800014558B800112F1BB9001100083E59B800014558B800152F1BB9001500083E59B800014558B800052F1BB9000500063E59BA000900050011111239B9000C0002F441110007000C0017000C0027000C0037000C0047000C0057000C0067000C0077000C00085D41050086000C0096000C00025DBA0014000500111112393031050E0323222627351E013332363F01033313331333010B0F1D232B1C0F1E0E0B1D0A1A230923CD609702915A452634210F04054E05071917570202FE5901A70000010016000001CA02050009001B00BA0004000100032BB8000410BA0007000800032BB80007103031371521352101352115211601B4FEB6013CFE6E012441414B01803A4B0000000003000C000001C202D200030007001F0095BA000B000800032BB8000B10BA0001000000032BB8000110B8000010B80004D0B8000110B80005D0B8000B10B8000ED0B8000810B80015DCB8000810B8001CD0B8000110B80021DC00B800002FB800092FBA0019001200032BB8001910BA0007000400032BB8000710BA001D000800032BB8001D10B80002D0B8000810B8000BD0B8001D10B8000DD0BA001500040007111239303121331123353335230111331133352335343633321617352E012322061D012315016D55555555FEF6556464221F0B1A0B0C1F0C46495702055D68FEF0FE4601BA4B48221803044A0404413F4D4B0001000000010000D71B1C1E5F0F3CF5011103E800000000B643600000000000DB3521AEFC49FE1F07C304350000000900020000000000000001000003B8FF2B001C08B1FC49FE8007C300010000000000000000000000000000002201F400330116000002AD004E02D2002B02C0004E010300520367005002D2004D02F8002602880025023E000202D2004A0219002402510043

00>] def
/CharStrings 34 dict dup begin
/.notdef 0 def
/space 1 def
/B 2 def
/C 3 def
/D 4 def
/I 5 def
/M 6 def
/N 7 def
/O 8 def
/S 9 def
/T 10 def
/U 11 def
/a 12 def
/b 13 def
/c 14 def
/d 15 def
/e 16 def
/g 17 def
/i 18 def
/k 19 def
/l 20 def
/m 21 def
/n 22 def
/o 23 def
/p 24 def
/r 25 def
/s 26 def
/t 27 def
/u 28 def
/v 29 def
/w 30 def
/y 31 def
/z 32 def
/fi 33 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4203806 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB2803033656251216BDBF602CE887AD86A5BE726F3F42312EBC0E6BCAAD0A1E3A7D81B386E3D2BA7269F921CBCAFC557B3E8902CE68484443CE5BF02FE4DC1F45D21D8D5256C92362B1994104C5FA6A7E8E4C6B297762FDD52228082DAF44FC4448B364D3EEDAD17D00E9A6DB10FA66D4B26DE15995E967ED5D6356CD7B75773C57E2CD8DED1D1AD81058314CBCA490964AB7AFDDBE3AA6BA317FD4B55F10CEEB59A815EA464FE4370C9FA353B474C2F4FE81001D5C4092860648BB4AAA0CCD70091E57E16B9ABF6F4EEB6B8F9D62225DF9C6F098301B437D1031C3BDD2FFC1A95F302806DA93B34A14020B150BB324376B2A2716CB459358DD7C61005047CEF3E9E288F69925134110644269DB67C98CB721554936211F6EDDFD2F720D966CF50009831BD2FF604F2F0AC94C5E59D3433E7EA829CD6F646B37EB044D6C3BEA2FE01476267A3128B0A63AD430B83CBB2A17A82A7CFE2D15B822A300D8B85ADF68A0100C8DD26A0474AB8A50B3C951C84A09C466195735A7904A71AB6F21F3292608C81EA1E85F02ED1C43C00A2DB7732920A346C558F8E33AEE742DCBBB002A21C1BE29BA845346EE0C34144338AB285BD7DB1BDC186035E10E060868CB990923E953D1A7DC11C855CB7F07B6C1C3FC1605F4561B8205CD3966BE8FCDE7493ACF48024D876E54939C0AE6EC3F1E0887EDC45F018E7653C893A2EB9F0AFE3C4836E2867ED8DCA10423EDAF9999389C95AC64F699C6D22E47050C17F299A2A34AEC7FDB13DD8

06177EF5446B922D99388202BBBDFC3EC3135F07BD55D567953B2F6C0376E25250755316DE0DA77D72559A65454BD7BF17A7D106FB166CD004FF428FBB3E743009839E323C4C754BDE62A248BB8F87CA0A7854CB477B9BEE932380BD411213993399973783984900DDC06A4005CDB0439548AF8C425E96656F7FC2A08DFB4916432019982F1882BBA94EDA3061E4C459BC7FCBE733DA680483AB6313C8AADCA35A3A2762E4AB412AD7D080ABF1FC42EB3DDE2BFCB88DC72345399DDDDAB4610F37AF30948560B156D6613AC373782EC57CA3E7A78B10BDE89C12D0E53E665A39A140784FE5FC1B07AC9EA7191FE9B97B41881DE8FB1ECD408A8DB01F2FB38B06CD155CAC2081AAF6E3082AAAD49CDD20BD0AA05120DF9F55B4A5A80D48399123AA96C3C834A55F2F746C3E018311DB4EE927D7CE678A0FB6FE786719660186E06307443F11B262C7B1C0E68DFB463E2987A9C329AC30A934AB20EC3D0A565940EE4A8EAA6B5620A6AF120439B75C1735D72F145FD9A986E4DBF70CDE2349A6872AEB215A9E347DEE254DB76BAC369F42F7ED797343F59944D76E632C78677AAD218BE6E0B4E8854504269B70E3F00F9A0B0D2180AA8D2D6C94A2ED4CC25B099A78AD2C4C4B7D28B8CB03390307497EF233D25973FBFD861936A43BA935513CB48C529FFAB8F5DD670B92E782B811621458B3643F6505BA5ABA85408C029BC4BCBC070B48E091D515F17C6CB46A2117A0A27A5DF6EA7054CE293A0D826226AAAA55EC7E3EA90D5C7F1178720EA1633E0E63785D3835D44C6D1D49BF6E3557CBA52C4F4B85031867E065BD4F15EF664E3FFC4599F5DAF61F0255E583641106D6A86D2334FD87C4933A845FC37C78849B26DA632F2286DC58EC04BE00ECA962033129738FC52D15676C0043C54FBBF2DF134B96E063E7EEF956E4EA226DCE8170D46E5802F36EFFA37B315B143F1166A79E71C4E122E184A1FFE027B6197FFC4CB4CA7414B38A8830FDC49645790DB9A68D0374A5C1914FA9157E5F6CEACD2E84628EB641D401A58B28D08615B0576E4706FF63564B0158BEFA8FD9B506B17C372DC0757D329DF54625B7D9DDCD5FE84A63E4ABFFBDC25F1A6721C2DD0AAD399B79FF970EB70AB8EEE63A41126ECA3C7B0F0AD6361B9C6C2AA582949F8706F014889F651E91ACEED056B4677C35CC53F3E7E670C6BF83A0D5E774F23FF340DCBB7400ED5BC73C4E35B6A408B08C30DDDB08D41D11D3193E25B3CD4D769D3D480E7334FD5CCCE1104E9D336C126A466D9D090209658CCA421C2939978A5E165F22A262AE0E1CEE48969BE93326E87E9A58A8EE8567F001A408EDBE68649D265E4ED72C005FC18BE9DF6A4802E5EA7F24D2C4EE6ACC78E6E1C04D47F09C25EE0D87DD7357B3CCEA6F196C595A3F02879254E411B5611A884EDA824B23920AF006720C
FB1D504D800EB5052593F3209E4655DC0814B779C4ABEF0170CD627203828ED687DF94D90BD7854B7B11417A21CDBFFAE9C50E029229D08E207032F3E363A8FD391311CF2404BF373976DBD7D9AED49CC6E7F3BCD1F948B3E311A21FF961C7B98012DCB24E6FDAECCF0D22BA50E6E53AEA2D21F8D389BE735C0A103A13ED88674B39AEEFBA6AB73CEA1AF1664FD4222E9766B697B45A6F46767183CA15872DA850A76B7B83D415863A9FE25626A2A73F59630BFC217C5015AF78F664C4F4359CB1BDBB4DC7F6EC2FD6C4AF92A6B74C7DDA27B429A45334BC9A186EE325412A931D839778AE4683458FE22104C35F6D9AD1318DD3FAF5DB0609BB3F2DD6432F323A77B3F23D2313A144AF2E0EFD645BE5325846BE492E2600B984576CA908B53279F136E71A77E4DFAC0D5E0E012E2034A9377DFD9D730DA41D115206831CE46E7925BB3847B1374796C9EC62C9B0FF71C6FBDDDC082D127B13C2540D71FAF662CB9070E3C068E16B7FFC1F35645377FAA20F860E31927D9A6C983630D768AF2A8849AAB7DBF324E27123CEDF75BF3A4B1D644E50C7BC6D3DE0F485A5561E45A957F46556709C347AACB0B0CC0A82C9ACAC85C6A3B7DD62EB8E770D74AF7D8660F16089A923183F0B9C1AD0E242FD5DE2C6EDF3BEEA7B688AEAD349C28169FB97A9449B30C82F9AA856C48E72C28D2AB9F2DEF14DD79612D1C439317A17468490A0E15528A2B98F2B7E1D40E2EABF0D1667427E6BEC9FBB6AE77853CBDF306DEC6E0190015493B5391CED782A6E446C76264A6B6526DCC4B27F9003EF2895B327FAC703FF80AB64771C1DCE557D231A9933F009A66A3085DE811FFA59015470ADCD3B3D0AE9D44269A032CE7F916A883EFB48A9279C81F4418AA0CEFEDCAD3BBC742A2EE623E529195EDFF5D12BFED9CFD9A72942FA06C8AE61304BFC15C568BC209AF7A2D2A3CB174DEF5A294C4E8D71411677C799F84F43B2C5B14C7C44AB7FCC77A26CAEF5CFE18BE5FB22AF1F46A60445665745A80DE1DE2507D633D72CD6B9D8DC7C9A8AB0A4A67860986B7C9CCE86BC35BB73BFF1CCFB0BC1012A818561985DC4282E3138C35DE7526AFD585B2B2875F83330D0E586B12D81DFBBD9068FEFFEC2CCB27613078BE7444050C1192B76BFA147197ED6C948813D07E9B9736293E6754264A399447AAB5FE95897FCD34990CCA189AA1E2C25ADBECBC459CAE911B8900D39FA98D40CF49BF9E3421EEC6F02FC22B7C3502B88DC714F2DAE1305D1615573C1AF45E67B9B857D0CBFBBDFB27CC71BE7FEB3939FCB0A3170185B847712C63245BDA3DB8BE612EF7334161BFC44DF8D61FE0F59074782FD8B2DC306A1FC9B452324B83BEA82692160D95340385FB15586A076812557DD89946940886EEE25C536336633E1ECADB5DC4F7BBB41E26302DE703E53C1BBB262AB65ADB4
CB78ECA2AA635AFCC8EF2E3B56D903E0A8669DB587FCDD48DAA2A55F41EEB8C721F8125C0D7C091F81DAC13B6614E2BFC7DB064D1E65BE3F450B7347CA0CF80EC4E371EC875B5987B98355702DF927A4A1E5F9E61C2219E1FF7AD43A9521603E16443390263F6226EA0D50F4009DB42645205685EA22D0A35C5A021315F054F5CBA63CB04761DB3153E0B99AAC6F955AC4606DE9A413ABA99C5321995CA1F214A8A65C68B2AED7DA66F6AEBB36134D15D30C68476913A19F4CC77DDB0E24D068FD2A2F89D23C60C51C86FED3EA180B2C6ECE8D6E6FA22B5B6881010D47C4ECC79253ADA06D65CF8B07CE9CE3D3DA38C8342126CADAC437027BAFC9F69D4914C666E3ADDC045CC32109F9188C6A09AED66A7F6293E3EA564D7BB76FB5DA65B517C5D295772DAFDBB9B26BEA727C82470BF7FCF600CE8BE385275B42D7D389D1F6C8D03D5015F9FBB505D8ECE425DF06A229F018A2986E42CC03749BFFFD4E4D9687214D2E56B74C425EE38E62172082D1F9FA6805A54431D2F10E008081EC2747EBD4654A961D071192C315FD2AA40B3CC5DD3E5EB2768C8B899A727E9CA6B430A33A316525300BA8A9911FE6E5740E74C599F1AA557FC5FACB51C6A52A770879A8F0563D932D3B9A21BD6AAE11854D3A6FC20F5C2220D1C909A2FF4504306213A28CCBB6BF77B7320B8FA5F6B8BAF42E1A662E62C04BE9D3352B556CB42A7A2BC94F4334E7C012C9618134DCD1CFEEC07ABF6EBD29A514A13A5AD15A098206331241D9F004EFBBECC3ED006BDC190D4ED44624278BEAA6C3DE077898FDC04B6E8D85D6276D269170E48CD6C3FF4A2BDF6AD9B1FA4B42BA3776CA1EF05DB7C7F2B5486243199147D0E8C2596BFAC0353D6CF55F3763BD99A7072392DE06540E26691BCBE941BC18FE12D29A0C2FA7D58E37D301C9DB6C8808488AF758040DDB6393D80B5797ADF72989394301BE5A1D1898371C7A415C49D0CF4E0F81E588D3A15BCB4A37B226AF2295C6E2548A965D86BF193D6AF3602697EFB3AA9F5B1BE8634A1279755F8E7619F3F656DF51AA804F8A63F6AF2F10F81D164E0161177C8E003253C9474FD6DBCC196861ADB44049B4B46AABC23D2B91BC45D0492D0B94CCA778C994557139B8C86EF354162CD1253E51F699E606355F7FDBC80BE8B8A9C5C9FCEE6BB2471D115FF239DC5B7565C625EDDDC49C64BB76BCEAD58385C91695ABA3E296AD7DF90333CFB987450F4ADA05F0C6D8AAEB2FF156664192CD00C26A59AB4881C19D8EA5C5174D01759A9659FCE4495E01556239B48AFF8139C574A2093AF3FC146ADB6006CB452A03E4E242A14D4ECEF1691A35631076F5B76389AEB6EC9583FC9586D3BAD4A115BCBA3C026D62F1AB8CEC47881DEC76F0CB3EDF1BA229EBA37B0354B503EB2E311C2C17C59AF6020426C800E50741FBD7F03C19D7F9
04B6AA8D80D00AC499A4CDFD8BA03A91865414C1E53B3760D1EC90D2644BDB5B9DBF186377959740D02224E855F21B007199A840D45EA7A600BD573E19E6A062C264A867DD18FC4BA84F4DCC77E8542A0E8BD23CD4256E365A5381DE09480706BE3927B62B2692673B4CB8035B2932BC55DF783118F9D57D5C6666B49E546552769D0EDB461DF28ED62D173A22ABCC2A1AC55864DC3A3C36EA5FBAE1AF30A03B252B224069D754FA93029CE755C2788F6F2F365EEF28005A95882C74716E4D274D9751803A5A9534F165CE27635025BF806B9202B61006938741D5EB03800A8155B5FA9B99918A50DD9D3FF215F1D2D44E692E6A7C102D5096B6272AF4684AFAC488FDABF68899B70CB59B7381944C922C8BA9C5EEB515A3DD3652C3F87742286486FE8480713D29321752D4C58754CF2A8DD030E693641F405681DC5055A3B348301D6F8607552A3E6F7890DB932A09C37BD9D22FFBD8FA3F9CF547EFBA8281A8B484AC931025C31E287B91B9F80DDB98A91C0741E9AE2FEC9E11526AC0598E22C5EFD8463CA7608FB7990054EDA86DB30EE87BDBF1B17CCE9ACC595AB286D6E30AADC3D6E2AC2512D26A91BA6181A0603D8FB1DEDD743AC854D5018F4597D59B71C65212A01946DA4979D966946D5B758D45D778F4751EF9394762FC25B30FC9A2A590F91D5D08E3DBEBF666649309A2CA6391614E970610D1D9645B98E65D0FA3521C0F8DA126F50268FE34343EB41D4409D628693DBABB980D17ECFF1ECD9B62097A72CD716D6731754BD9FBCAFCA8AFCA5D8C162BF0848BFCE9DC9E6269ACE419C62A08D01757C9C28C19728364A9F6AD5800EC2285936727FEEBF61D6E3116E215878BCB42AAE24B58E472A61824887D4F31458C79BD219782042937027E93E12DFC8CEBFE0AA3B998A2496B2B017965F30023243BD0BFE6F1CCDF2D84AC49C6FC08ED169B6CC4B39A8AE269743D4B0F2592DB94C910396D90490F35A3569CA203C21D44B979F6A5033E07A1D650D669A9C3D245E12497BB207AE4315FDF7AFE68C03359DB68373EA053F148946931EE5684BB09FC03EC29A167708298EDD3D929FF064122FEDD45E8A6DE12224B0839C87DE0830E75F05467AC3C5A001B13A656C923FE32E2469F3C493EBFCE0B85EFE57D805B71F3E288FE8B36B445FB7FB8BB09A3BF5430E2B9E4849FEC5016C0C2B5CC1EDB302EE120CCF183CE0A823D8E03DEF8F6A763F4E29E9E3626314468E1FF1015BF7EA8E5B69042614B9EDE484B0F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: HelveticaNeue-Bold
%!FontType1-1.0: HelveticaNeue-Bold 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /L put
dup 34 /e put
dup 35 /g put
dup 36 /n put
dup 37 /d put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -1018 1 index div -481 2 index div 1437 3 index div 1141 5 -1 roll div]cvx def
/sfnts [<



00>] def
/CharStrings 6 dict dup begin
/.notdef 0 def
/L 1 def
/d 2 def
/e 3 def
/g 4 def
/n 5 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-1018 -481 1437 1141} readonly def
/UniqueID 4381012 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB2852CB9BD3FB4254FD5F0903E5B67D5C2ED1223D2F1D96D0624F745D9E6F43F03B659367FD8D390E6A20EE3EBA100EA53918DD1B6C93C796E0FB8DCD9EC789502738128ED8FDE21A678178761B9E196316C1FA449884B347CAED5984F1266B62759D7E2164889A1DC6D369BE693F2760E57811E87921234D4AB048A0355BAEF4A0EA49FD9682AD0B96F2C2D633EB193103FF1F1838BAF1086F0F2E341F40DD46853547211F4EAC6CDF02F5A8CD2D2E660454E0ED74DBC9FCF6AD775E9978C4CDCC518D92572AEEBDC04D748CB0EECE562E2BDE95A2C2090D9B9AA9C9719DE3CB8E922A26BF20E2AD40418A89B17EC0D4CB0A0CD5210FAC47D5A0A9963A26E933EACA8E634A4DE42A57D976A2FC6094E5CF5305251BB12B7854FB33AEE4FFDAF97F09E17991174D5E57DF165916865F0BE1B83B67B7D7F00CADDE7031FE8C58E4DCEDEBF6C6127E085AFD0AB626039E2A67CCAFED75922C42590005EC423AEFF3C32068135951EA3157F8B5BE0B5860B5674664C1CC303AC26AAE612DD640F8EFF1349A54614B83BA359B18B5907100C58D2F89D0BDA8B2CF47C14FF1F5694A6118DF56059BE16AB03D3BFBBC604B26764D42A0627B5242F9CD9E56E53976291BF28BCE0B24AAB9DE702AB8E159B450F6134370459224F05BC85D6C0CC782426D127B2CF3C12FA9F2E2DF8E951AF8F90D2EFF8FFEBBA7BB6D6BDF2179091EB04794551D523627F8EF72CA47135FB44DB67FF6E135014B36B126E4FDD13106E0359A8D5786D
167BFB399021A9C05CAA3158A6ED52B6CF555E06EA648BB7704AD4BA6A5972243855D457C07D92D93D5EEF9F6C7BF7626CF16DC9AD3BE1557EA8742EE00F03C4DEDAB2562F2EF62B7EB74E80E1B84B6F22F67103ED67727747D683A63591C8EE9DACC4216EC35040D9B60414440DBD641DF20A1220547B3994A057DCF2C55B6E62610D18DF5AA75335B88C6BDD89BCFC41E5CFF8009F8D5D8ED552039FB17D666526159CFD44E447256DA6016B1F8811D4A2EA897A0560B4AF20FA688F84EA64D8AD8C1AAD6C48ED4263467AF621B8ACAF2260D87165AFFEF3C535948D78DAFC3EE7315238118B78A1359DF11E57A0A28AF05C323674596B6D77A7A39C724F3EA6EACB5FBEB0886F17705A7ADB885755A5321965DA0DC2CACD382152189FD0B0D2389C8745D7C33ECDE4E9DA870BD3F2E2B59B42C89908C443C39323C270AAB25BCDF37086356A3DC5CA5C9F58123806586C8D183A8B6227DA25A10A7511D5F1484BF8A1A4D913305F8D968CA454BF39B7C55F7164319C4E53240A2395F4563DE5725B6B95B9CDBC68359166C20D063620FB55017F15F18BD5DCFAD13A014177AF7490CC76A6827A59253C0E7ABF9EDE7A9AFB84017B4BDD053A7C0F842FA049E37291753E25976E9342AB32A00551532C35C9408F69CDE024264CA12DEC76EAA8FBF2ADD651B1BA5F4F04808062A1FEEF0C293E2D574AFE7C1A51C12893136614EB7ABEFCE686A8C08939F02921ED12473FCB0458C266302536C8D7DC240B84FD3BB70794875ECF29BD26C21DAF86A54EAA75923E4D7E86C6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Bold cguidfix
/F2.1/HelveticaNeue-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0.75 0.75 1 sc
q
0 0 712 166 rc
24.85 121 m
136.14999 121 l
149.3152 121 160 114.62765 160 106.776 c
160 98.924355 149.3152 92.552002 136.14999 92.552002 c
24.85 92.552002 l
11.6848 92.552002 1 98.924355 1 106.776 c
1 114.62765 11.6848 121 24.85 121 c
h
24.85 121 m
f
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 254 -100 cm
-229.14999 -221 m
-117.85 -221 l
-104.6848 -221 -94 -214.62766 -94 -206.776 c
-94 -198.92435 -104.6848 -192.552 -117.85 -192.552 c
-229.14999 -192.552 l
-242.3152 -192.552 -253 -198.92435 -253 -206.776 c
-253 -214.62766 -242.3152 -221 -229.14999 -221 c
h
-229.14999 -221 m
S
/Cs3 SC
0 sc
0 i
/F1.1[ 16 0 0 -16 0 0]sf
-228.164 -201 m
(!"#$%&'\(\)%*"+)[ 11.552000 8.592000 5.040000 12.128000 9.184000 5.328000 8.304000 4.448000 13.936000 9.184000 9.488000 8.592000 0.000000 ] xS
/Cs1 SC
0.75 0.75 1 sc
CM
24.85 149.448 m
136.14999 149.448 l
149.3152 149.448 160 143.07565 160 135.224 c
160 127.37235 149.3152 121 136.14999 121 c
24.85 121 l
11.6848 121 1 127.37235 1 135.224 c
1 143.07565 11.6848 149.448 24.85 149.448 c
h
24.85 149.448 m
f
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 254 -100 cm
-229.14999 -249.448 m
-117.85 -249.448 l
-104.6848 -249.448 -94 -243.07565 -94 -235.224 c
-94 -227.37234 -104.6848 -221 -117.85 -221 c
-229.14999 -221 l
-242.3152 -221 -253 -227.37234 -253 -235.224 c
-253 -243.07565 -242.3152 -249.448 -229.14999 -249.448 c
h
-229.14999 -249.448 m
S
/Cs3 SC
0 sc
0 i
-221.20399 -229.448 m
(,"&-"&\(\)%*"+)[ 10.368000 8.592000 5.328000 8.000000 8.592000 5.328000 4.448000 13.936000 9.184000 9.488000 8.592000 0.000000 ] xS
/Cs1 SC
0.75 0.75 1 sc
CM
276.47198 149.448 m
347.36801 149.448 l
355.754 149.448 362.56 136.70329 362.56 121 c
362.56 105.29671 355.754 92.552002 347.36801 92.552002 c
276.47198 92.552002 l
268.08603 92.552002 261.28 105.29671 261.28 121 c
261.28 136.70329 268.08603 149.448 276.47198 149.448 c
h
276.47198 149.448 m
f
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 254 -100 cm
22.472 -249.448 m
93.367996 -249.448 l
101.75398 -249.448 108.56 -236.70329 108.56 -221 c
108.56 -205.29671 101.75398 -192.552 93.367996 -192.552 c
22.472 -192.552 l
14.086016 -192.552 7.2800002 -205.29671 7.2800002 -221 c
7.2800002 -236.70329 14.086016 -249.448 22.472 -249.448 c
h
22.472 -249.448 m
S
/Cs3 SC
0 sc
0 i
24.728001 -224.448 m
(,./0%+12)[ 10.368000 8.000000 13.648000 9.488000 9.184000 3.552000 3.552000 0.000000 ] xS
35.544003 -206 m
(\)%*"+)[ 13.936000 9.184000 9.488000 8.592000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
-95.394241 -230.42331 m
-2.5116489 -224.71437 l
S
0 i
CM
259.4733 124.22359 m
251.67239 127.70872 l
251.30431 121.72002 l
h
259.4733 124.22359 m
f
0 J
0 j
1 0 0 -1 254 -100 cm
5.4732828 -224.22359 m
-2.3276041 -227.70872 l
-2.6956935 -221.72002 l
h
5.4732828 -224.22359 m
S
1 J
1 j
0.60000002 i
-95.394241 -211.57669 m
-2.5116489 -217.28563 l
S
0 i
CM
259.4733 117.77641 m
251.30431 120.27998 l
251.67239 114.29128 l
h
259.4733 117.77641 m
f
0 J
0 j
1 0 0 -1 254 -100 cm
5.4732828 -217.77641 m
-2.6956935 -220.27998 l
-2.3276041 -214.29128 l
h
5.4732828 -217.77641 m
S
/Cs3 SC
0 sc
-89 -245 m
(3%/4%51#1%6)[ 11.552000 9.184000 13.648000 9.488000 9.184000 8.000000 3.552000 5.040000 3.552000 9.184000 0.000000 ] xS
/Cs1 SC
1 0.75 0.75 sc
CM
451.35999 149.448 m
552.64001 149.448 l
552.64001 92.552002 l
451.35999 92.552002 l
h
451.35999 149.448 m
f
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 254 -100 cm
197.36 -249.448 m
298.64001 -249.448 l
298.64001 -192.552 l
197.36 -192.552 l
h
197.36 -249.448 m
S
/Cs3 SC
0 sc
0 i
214.808 -224.448 m
(,./0%+12)[ 10.368000 8.000000 13.648000 9.488000 9.184000 3.552000 3.552000 0.000000 ] xS
215.256 -206 m
(705"&-"&)[ 12.160000 9.488000 8.000000 8.592000 5.328000 8.000000 8.592000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
108.56 -221 m
187.46001 -221 l
S
0 i
CM
449.45999 121 m
441.45999 124 l
441.45999 118 l
h
449.45999 121 m
f
0 J
0 j
1 0 0 -1 254 -100 cm
195.46001 -221 m
187.46001 -224 l
187.46001 -218 l
h
195.46001 -221 m
S
/Cs3 SC
0 sc
113.56001 -245 m
(89:+1;:#1%6)[ 11.264000 8.896000 8.592000 3.552000 3.552000 7.680000 8.592000 5.040000 3.552000 9.184000 0.000000 ] xS
/Cs1 SC
1 0.75 0.75 sc
CM
263.936 57.895996 m
402.65601 57.895996 l
402.65601 1 l
263.936 1 l
h
263.936 57.895996 m
f
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 254 -100 cm
9.9359999 -157.896 m
148.65601 -157.896 l
148.65601 -101 l
9.9359999 -101 l
h
9.9359999 -157.896 m
S
/Cs3 SC
0 sc
0 i
18.544001 -132.896 m
(!%6*"#"&/1615#12)[ 11.552000 9.184000 8.896000 9.488000 8.592000 5.040000 8.592000 5.328000 13.648000 3.552000 8.896000 3.552000 8.000000 5.040000 3.552000 0.000000 ] xS
57.816002 -114.448 m
(<"5#"&)[ 7.408000 8.592000 8.000000 5.040000 8.592000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
197.36 -193.51877 m
140.41878 -162.618 l
S
0 i
CM
387.38742 58.802238 m
395.8497 59.981247 l
392.98785 65.254761 l
h
387.38742 58.802238 m
f
0 J
0 j
1 0 0 -1 254 -100 cm
133.38742 -158.80225 m
141.84969 -159.98125 l
138.98787 -165.25476 l
h
133.38742 -158.80225 m
S
/Cs3 SC
0 sc
162 -150 m
(=61>2:#1%6)[ 11.552000 8.896000 3.552000 8.288000 8.592000 8.592000 5.040000 3.552000 9.184000 0.000000 ] xS
/Cs1 SC
1 0.75 0.75 sc
CM
1 57.895996 m
160 57.895996 l
160 1 l
1 1 l
h
1 57.895996 m
f
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 254 -100 cm
-253 -157.896 m
-94 -157.896 l
-94 -101 l
-253 -101 l
h
-253 -157.896 m
S
/Cs3 SC
0 sc
0 i
-220.32401 -132.896 m
(8"#"&/1615#12)[ 11.264000 8.592000 5.040000 8.592000 5.328000 13.648000 3.552000 8.896000 3.552000 8.000000 5.040000 3.552000 0.000000 ] xS
-194.98 -114.448 m
(<"5#"&)[ 7.408000 8.592000 8.000000 5.040000 8.592000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
9.9359999 -129.448 m
-84.099998 -129.448 l
S
0 i
CM
161.89999 29.447998 m
169.89999 26.447998 l
169.89999 32.447998 l
h
161.89999 29.447998 m
f
0 J
0 j
1 0 0 -1 254 -100 cm
-92.099998 -129.448 m
-84.099998 -126.448 l
-84.099998 -132.448 l
h
-92.099998 -129.448 m
S
/Cs3 SC
0 sc
-89 -137.896 m
(?:2'#&:2'16@)[ 10.960000 8.592000 8.592000 8.304000 5.040000 5.328000 8.592000 8.592000 8.304000 3.552000 8.896000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
318 -265 m
456.72 -265 l
456.72 -101 l
318 -101 l
h
318 -265 m
S
/Cs3 SC
0 sc
0 i
/F2.1[ 16 0 0 -16 0 0]sf
323 -244 m
(!"#"$%)[ 9.488000 9.184000 9.776000 9.184000 9.488000 0.000000 ] xS
/F1.1[ 16 0 0 -16 0 0]sf
356.72 -207 m
(,"&-"&\(51*")[ 10.368000 8.592000 5.328000 8.000000 8.592000 5.328000 4.448000 8.000000 3.552000 9.488000 0.000000 ] xS
/Cs1 SC
0.75 0.75 1 sc
CM
581.91998 127 m
601.52002 127 l
603.83838 127 605.71997 120.728 605.71997 113 c
605.71997 105.272 603.83838 99 601.52002 99 c
581.91998 99 l
579.60162 99 577.71997 105.272 577.71997 113 c
577.71997 120.728 579.60162 127 581.91998 127 c
h
581.91998 127 m
f
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 254 -100 cm
327.92001 -227 m
347.51999 -227 l
349.83841 -227 351.72 -220.728 351.72 -213 c
351.72 -205.272 349.83841 -199 347.51999 -199 c
327.92001 -199 l
325.60159 -199 323.72 -205.272 323.72 -213 c
323.72 -220.728 325.60159 -227 327.92001 -227 c
h
327.92001 -227 m
S
0 i
/Cs1 SC
1 0.75 0.75 sc
CM
577.71997 82.647133 m
605.71997 82.647133 l
605.71997 54.647137 l
577.71997 54.647137 l
h
577.71997 82.647133 m
f
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 254 -100 cm
323.72 -182.64714 m
351.72 -182.64714 l
351.72 -154.64714 l
323.72 -154.64714 l
h
323.72 -182.64714 m
S
/Cs3 SC
0 sc
0 i
356.72 -162.64714 m
(3+1"6#\(51*")[ 11.552000 3.552000 3.552000 8.592000 8.896000 5.040000 4.448000 8.000000 3.552000 9.488000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
323.72 -125.01827 m
341.82001 -125.01827 l
S
0 i
CM
603.82001 25.01827 m
595.82001 28.01827 l
595.82001 22.01827 l
h
603.82001 25.01827 m
f
0 J
0 j
1 0 0 -1 254 -100 cm
349.82001 -125.01827 m
341.82001 -128.01826 l
341.82001 -122.01827 l
h
349.82001 -125.01827 m
S
/Cs3 SC
0 sc
356.29599 -118.74227 m
(A6#"&4&"#:#1%6)[ 4.144000 8.896000 5.040000 8.592000 5.328000 9.488000 5.040000 8.592000 5.040000 8.592000 5.040000 3.552000 9.184000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
