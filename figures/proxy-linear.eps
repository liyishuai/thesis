%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 205.000000 119.000000
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 205 119
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 205 119
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: SourceCodePro-Regular
%!FontType1-1.0: SourceCodePro-Regular 1.0%%CreationDate: 5/19/21% Copyright 2021 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (1.0) readonly def/FullName (Source Code Pro) readonly def/FamilyName (Source Code Pro) readonly def/Weight (SnapShot) readonly def/isFixedPitch true def/UnderlinePosition -75 def/UnderlineThickness 50 defend readonly def/FontName /SourceCodePro-Regular def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /i putdup 34 /n putdup 35 /parenleft putdup 36 /x putdup 37 /parenright putdup 38 /o putdup 39 /u putdup 40 /t putdup 41 /y putreadonly def/FontBBox {-193 -454 793 1060} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BECF1D53D6B91083A704933106ECB17A4B7E5383F7F67A8F4B4DA84272FA8A33A4F60176B21C75079930CBF1ABF7B0CF853935C8F3C71C2026BF19BF21F77C26CAB95F0FBBDE043133DFCD2D60281EC729051F61F32BA78E3D9CB7BAC6CF6882116BF4A9A68F10F489C70CAEE2ED9674AD23469B2034AA58DF71508CD2757C5496D59449908B4CE432264D24600E1FF144BC272382DD3A8AA4813CC33A5D2049692C3DC9CB475E2162EE985D2F3A5D2F7EA930F8724777801F5B1203BAE26C30E82BA7A078D40EA47AFD036181B747667F5F57E643A16893F7F76462A503637E23798EAC578AFB3DD8AEED91996BDB6ED549BE1379287F9FA97DD9557679F7C0132287D48C0DF8ED8DC24526F87522397522F5150E8E961E641E858C6089D9E6BAA98579EDDC70A65C3AF61CD416B6CCE755CC44D43AA88690DDB8BA00D9D532C445BCBAE62575A8752EAAF7AEE785C21C249A2C1132A955F99576E27E44AC66CFEEFBABB9BCD30BD3D0670DC42FE446A22F79FEAA87DE71B2C402F43309BAC09D2F2C707F708DFD5C2EC4F97C47245838D60D40CF0C59730DD827D0A21A0CABBD90EEAFF4CDC6A925408A4FC49B524D185368B5B41BBD19E68FA931B53DB25EC9B58A98509667D150D2CE740E336CD1EA02074F86F598B1DC25CD6579219231A185942A9FFF0FB340B20F43B8EDFD2C82ED5D843D83C88E2FF57967E8C53C3260F71719842ECE0FE07EB34F44A11EC7912548BE93F98AD78D73DD5050FAAB93820239B1FF865CAED1B3CD0EEEF26078682DDF961336F31DC3CC6D9BDB99A8211D54451A81745D306F68CD6A917E3E27A7C9A37775DE3F3B6B05B735EAD27F9A6EBEB3665B53F0D53C647DFEDAE116C5121D21A8555CEA65EEAF5728A8248360A8D6B1B4880E5A05874892D9EDFBCCE3DF5369F5A11D5B97E9A4C824018D8E02722D05CFE74D3E56C3C8508AA0CAD7F361C807592BB8CCBACBA715C9CF86488920C54155F94DA5685EE61F92F039AF3673CC4FB64AA39F6AE674D7ECCD4851713DD8A4D241D3A33CA251F20CDB0C299F864F748296DFAAEB5BE5814F199F98B51DA4BAB0C03FBD0028B776C732F5CA4155B1B46E5834A11E1F5714B8F413B974C44E2AAF4991928D96119BF308E60DE3D3C8C76BD626D1DFB487A6788D506002053C66553F4FD3DE0B3953DE3A593917BA0D518E4AB050C311D69783B456E4B621436CA0E66038286796D15B722AE1908F863E898BA402CF1C43B9056F4ADA27EE5A60D017839543DFA9EC90F442281D965FFB0F1ABD9ABB090151AD440B8578C54A8329A6BA2B2BC3F3BE9B8AC9323CCA3411A062BB4CE44616C9241284D0540DB2578DC6ABDA7733C99DAE9BD8A56D9A4F56375EBA1BEE582D262B45CC6AEC5A99DB203E7D07D38D81D51F623F9DBEB79DF1C9301AD37AE8F28C2A1743E373B507C740903BF046CC7482E09EA21B117D27776AAA09EE776D5F4B2F8DA89DEEF4A0A114A2B488C64675178F62D8BA9508B061CBE46C6B5746EA2C2AAB4B465D2C9AEC5AFF97FB332CA1BFCB1EF5AFE0996327A12D07BE490D7C94D91EFA9E6648D13C5D056A8097E2A76C52CAC2C13BDE861E3D5CCD3C8760F0598316EFEB328FA4A78A906E0AC1B976F9793CD69ECE86B77EB99507F8A718B240BAADA76C492D2B83D060AE422C70848F005056326B724559C83CEC40354FDE81D8D8A1B274B048BA7B6B06AFC551047E005F051D8C867372D9E51DBEC9AC2A7F2777F8CCB5B7CE83FC378F874E00197B759CE1BB670A4BEB8F49BEA1CCCE2058660044DEFFF0D60D46AEFFD5168EC107C3F67286D0588576296579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88AA072958C75F616D976EC60CA1EDBE4DD390CC2C8A6D27F5BFEEBB9FF5D8D2FD3858D99EE2102FC3B6921512946A9B58359504095EC203AAB153D2E873160F038ED46EB7E3A7512D59605A698FCBD4772EB57C6CE65D92428B8AE0ECA159D78385B2808BD3FEB216EC9F9CCC606BDDC904FEC030B48526A8B73B6DE92DD9CD2B90503A8C24390C0ADE13EE9503DB6FB5CE3FE9376D3855DB2780A3E76B3B3C6A256835728DB5B679F2FB691E4031281A7948C2293D469FC0D3CA85C4DFC6B045911C298AB85CDD6AD8520D7AE972F30E08F57A71D5A5DEDBBAEA7D70681FD4BE50BBCE981ED10B15DD6523856A0B0FC5098360A0D1E6174C1046B0F4D40BC00D064CF276FEB97A90E87958CB4DB5FBDB53FE17473DDA8984ECE278CECFEAB0B4BC12BB9769B1A42CE0DCE62BF098DC9F1E6B208405298A95AB5F4CF7BB505B0CDB441D12B09857AC65B05E9F4B63656CAF8138044523F37507CC5436D414F64D7112AE8B62CB66D0B6E045F1CEBD479F378778EBFE49A6F507C3EF92BDEDFB752B7692C4D541EF87DB2F06F1B52CB811FAA7CA6B65EB971D6F68272A03735A75C1DA55D877E0ABEEF1AAF95B578ECF8D267E3511E742C3732BD86F5A4A0AAB17E11B7A187764FAE3BE29459DDC57A5119AC7E5AA43795107D537B2BBEE09170E4ECF55A01B81C7DB73821DF95FEC0EE50964512BE565473889F8B82346B16F4E7D90E2353A6D18FBDE5BAF0D5E59E7F791FF46510D6C3BFB0BBE11FEDF09A6C4341CE8DBFA7911E1783A9949FF621E12DC1463DDEEC9FEFC9630F0B9C54F6384FA5FDA91DAE6ACD99C815674E6D4202D2A57DB8AE4270F736963E95C034B45D9F0ECDF42BA96463E5D02DDB00188B535EA1029EC336606DCE1401895B9F0BA27B7F6F51269A58B5B4DEB12D80878BECBBD6BCFE26915C050AC3030E86400E8EA57402CE1E0EC148F8323B948882CC17EE9A9E0AE066D64FCB44F1F0CE23984693A04B9179227214DB143405DF947CF20B5A0F7F02D1D14CBDDBD4C2393F806774F836809202C2263590B86B8DC63ACB6813C78791C87038F7A50E2967ECEB178F0A3EE0EA6BFB64B62261FB18FB967B1F8C3F79B2FE662EC117E08C0F15EBB0A202CAFDC31D3D3A7F5293F830A190E644A97574872981C10C309DB457E237FED0FC4DA3005D0F4544BA7F117C4A0644F31E5611E17AE979B0CD9BFB0A540E511AEE736FA19D1434F5B5A9D94AAF8001A2FE6699C17C9DB918024E7665D38794355609E6BCECD3C986F7F8D846746F9D87D80CF6688E797E11DA4910287495F6433FC6D4DED0EE6964363BA26A072D4C06D7F0DAD7A7D7FB86B05D1443F37512DC01FA0662B383CBAFFBDC9FB45722A287BAF84ECCD564FBAFCAA95367DF391E5BEBC3AA1BBCFDF7C371B1BD5039B1C33E832C4B075F8C48FC2AFC787834FB8B95C86AB93CBC898425B6BFC06AAC064BA20145382AB5399F5BEF7C8304A8732E9D968936EC90CA3AE4D9BA903A39CBBA56E34A6E1E10ADC60A31BB388E0B49C1D0784F32D952297B1859C72C38FC9F8E9A2765043563D5CA9B980F848C69D23270ADF6389EC6915C3319F07D93DAB0A94195E778E4476847AFE8A01FD2B3163D0E3A110FDB35A1A8B4F5707E04F1F1D126D6CE7D73B3A860C7043A998B3F6297BBBC8CBAEFDAE889C800290CC9D9A4A1BD918D395A1F9FEA4C23F8F4A0282E8BA1D67A471FDC35BE3819ABB121C59AF8540D2C65A7718E960A19DBC558586DAA2B3406B2C3C6597CD0EC2810B8DEF3291AB4D899A4F691306BA22F00D888E49D65697098D5B9479DC2965CBA2AA99E04CB1DA72108B3DDF98332DEB0A4C544D0D22FBEED54D2C73F432CA73DED6130433F488855C47C5641DD5424809E30A65DAD0F983B4E499220D61BC1E3A6A865D85E47DE7330C22B14AFDAF68FF8683CCB7AB3160A8179ED137D8C7C97CBD55AEDA2240DEA40BC6707D37B48D110665CFBA910FD1749BA2FA3746CBB73D9F311AB0F9E1F1D2B437C01203D2939E89A1F18A4ADE840864F947AA62DFA95324ABC738E09112491C1B2B268C331439F2B72D5E0BE3EE475FB99C45F467A8554776F3FBD6A30BE83D5E4913E76C2F08390B40696F09A4292D42128AC47A8ABFB7055FC1AF6326C4BC69A50D3ECA3E9C20240D3A65D344488BC8B6E8086DCF1A04349E61F33C811BB8388FCEC80B9EDF289DC6EA307E8F27A5BD0332FBE14335B48193C9B34DB24CCE4C780C9CB16CE5FA2D1D7D4AFC918AE4456DEF573F4CEE8D6FFA0EB63CDD09018E5E9E3860CF43D42F866A765D93A53AA7ADF320788AE92FF46781BAB03D6416F5AF54CBA211D140C756C68742C45B4D3B1817E08673A85EABB084A46BE5B2CA3C9B0AEC5FF8A0FCA6BFA93D78567514D97BC88DDBAA400673F6466ECDB1F994EEAF3D3B9D508722FB7F60CD5A6D32F47BE52BFECDD83BF6C8E2CF5C3F2C354D192123101F005776D391A587EB91CD5521075B0535AA37CF76B44FC603870E7EBCAEAD90F25263DC02FACB18810CCA5C8DC70C57CC3067D9387E6572E77FDF0782D65F62BB5BC90A7B5C6DF360BA3FAE19C1C4F15AB472B92AFA433E9A3A7DB7D20AE9888D6BBF255E9E37A2DD633F5C8846EA315950609927DE21EAD2762868CC38D21C64F5232F5308912B305447F69DCDD09591EF97C9416682FD068AB43DD4265C6004306F57E8FD977F6CFDE8B59827396EB193E304FC9A7A5E032F586258509FD53D8FB8A7E48808E37CDAD43D250E1BCD381CE269DF09A009519B0269B18BDDB59D27B474337AE3AE3E0AF2A24F7D7BBA3A953E7E870225DB5CBA25FA42F8D1B001DAE5A1FBAD7F98FA3F4B853BE153D7CB50A88BC2AC8D4C0EB91423F8073BF631F828F830141D19EDEF60EC69D043CC35139CCD5EA1A42778973B08A5E7315C57B8B51438D79A0371A24554EBB99318851BF67A961AA77CBB1FBF65175A907F6607D2393B4AF7477E5A9477F778E0CB7FE409F2417CE78F99E0A2A860BA9D2F05CF5E9B120C4E99167D54BAD918179CF9006224635E8D1DE881864A3320D9AB4B5CB4FBBE2EA9935E309DFCE935D5F53CE8564D07C0FCB9769A14DD3A4F44FE8D0BC52464ED1751B549C6755ACC75B4B9A927C66F714D36B85BB9DBA804E3DDD1C1DE619DFD791DD4DC018043537ED6E61A96631AAEF77B9653B3120F255B9474D77FB1023E8ACF96920D043740AAD450A3A19512120164B6FF5C0A881423C01CD81D2F727668AF51E07775709D4102B252147F55A0E4A8AC90E63A07849EA14A3B0493DAF1F0F2C04C88B4FC501E2C69B84905383027756E05D1247C402ABC7545BC009BF02E9E50EDEE778259ED950254BD6CEFDC6CEBB0E6AFADC758C76FE9B448D12711856F2F6B48F6AC9DC1F8B3A3BFEA6517D813AEFB88F5A2C1BFA94167AF5114630BA27B369F916F1C54889BC7F7BA001388A321DDBDC4305F8A0122BEE36915D2433A3D8F2C1B5F972EDA8581F7FF2EBBFEA262D1EA87E4FA5F61F359C13FC8A663B5DD707AF279F6D4AC3994B5AA83B40B25A536CEEF98528524D66439BA387402696DDB05021929FE80E5825863A37BA42532A5C5D8980959BA2557255284C4C8CBD16BCF5B202EA17F6BC6A1E69DEC29EABAF3492D71E307F61D3941F8737A05112AA126B5073707CF197878DDAF49D0A64949F2FF177515488082E47EE020A9776B7B1804FCF408DCEB7F85B4209E1DF1B33248C8589956BD67E3453F3242AFA2E3531AAF4FA1968E4E5F5CA45AFF874CB9880C32F2AB275EDA64994EFC625E498A55E7626FE84FD26178C66536A9BC3E26B0533B5A7F93CEE3E9E076E3C357A9AEF47057177C07F4352D12223CE57ABC904591928114DA3D9025772E8C65A36555B8DAA66B0F2E512B638AEF38B403FE2D3559A887BC98F4F2B77D1D07500607469DE0068A2E3FB43EBAC56C66F9C990C552FF983AA58C14D10394FF5013C40B7C873E065BBD9A8EFD01CD1206B43C61DF3E0EF0FD99973C801182FB0FD29A7D823D92A4092A790F2BC242494843BB6D5780BA8E9AB9DDE57408503F0F99793E2A94C550EE0BCC61629A84B5762F380FED80E7BEA78F4DA3C480476F9FFADE241E8EAE369931B6A5049213F9B88C72D5C28251AD180AE8CC31D58957629DE8AF1C5CE3D204FFB795EDEA57EAA71EDF4E128B28BF8D36BE05C0D2A8B27B4BB21BDE02338B5C9570E76EA2AFDC8FE0E93D809A2C7841D7B3173AE6CC5C4E008A426F9D1C4FF39C6F2E8FABBABD604214137123EF6219FA8A31D212D97969B40C99E43A359BF32BADC3FBD7416BB5B04689E23473F16BEA46DC2398FA0E9C13CE5DEF3CA373E79FF140787C0BB7105D1EE6B9E17FBC46691815739B2E34F5CBAD994ACFC8E92DE356B0A44CAE51D26045D0108463139278F012ACC91558508AE0809353F95E01A646AD938C36478DA43B906BAD8A787A514ECD0031B36AA12D1CCEBA8426670F1EAD1CA6AADEEAE423D1DCF66DC4EFB865ED1E7CB841665C21C5F2E80F54591B97581217E2EE86AC96BF23188A519E56F579449D3BA4F0714A116BCF2CF6944DB7896F67E3CCDA7D701C6C0292581C0643895785A92C95809A996FEEFABA1B7AD8515A20F582043A65018CA26B633E4201850F78C65EF901253C4AEF3067E9168258F3655806657BB1471036171FA1FE7E316FF0F075BBFB85CD5541DB70A499567FDB29EA3140D8535D679EE58D769E398365066AFE17A49273D0CFBB27039FFF4AC136C5FC8C0F717CDCE4DDB105121244A26C450DCF69F42D06C6445213BFB016251C85EC328BFDB2AD19729C4669D9C97378A1185A191BC66DEDB187ACB590E6B5D673E24E5B1EFBF79BDC09ED7076F3CF45FFD3B454CE92A599165320AB0C0C2C633885297E6CD66FB4A7925895E03B35E7CB1DF0418D10B3D65ADD945D3145866A5833A5D6DA29E7B0526BBDA5DE452A0933523A3BE59AD756E41D548D9C84F7ECEB44A7ABCA4A90FF1AB84B8CE74DA96C4BCC13F313FD35431F899B59CC62CFCD9281573E9417A411B55D6D5B53BF936F1CECCD18726C24AF33FA71DA8CCCAF480DCDE895F863CFBAA4CB9D0808879A3904296BC0CCB1B5C82C2F9AA9347C56345DCABC192096B5F2D3358C193FDB4225905B77CC0C8C21A0DB64B68D0BDD1DED2FB0606D7DD6287B0E05A041B5442F59A6089314956B50AFAFD74FA2D1E78184D93305360E155025E3FE622745D76BE5534267622511681B481C909334DF3045E2C3AB6BA57817291513D78DB1C970B27B955EC5AB465AF5CB5EBD3BCFF8E335947F0D41616087660D1494E1C06A84765CDE32945942FD4B441FA257E06F56F0F1AA20ECDF4F570EDAD4421EE6709C225E2EDEB7C7742C27C0222446D822DCC97B0B3128F326A2E91AE994C8578A41502C358E01A44B7EFC4F9E11CD85F3210021C67D3C3FEEF12CE54E0AAFE3AF93D29C4A8229BB7E539D2F953B0B9DB33D622C1875405E1295178F588F812C6061C49D39712E8D23D402E55D227CFEB8890CBF21739001F10E724A7A85303ECC7F8932922EDC2D7F7E1D23A2723AD4D0749DC05FFE32A88F528FD2F5F63566E2019CE536412F750E7496057F77832FB1EA229F5AED3334D033C7EF989C1358CF16DC076DBB5214643B76F3B5E4D8D755DD0F6256486E345D4420AB1E1487558D2AC727ADB516E37F5E7B71D89B7F06149897A55EE182D6B5CEA80224BB6DF8A839E88CCD0003F30419E441E5B16743BD14CFC8BF4336DCE5CF17DFD9067916D6684376E40F6654B45CF1F6AED8D743E9F1F08F9943033DAF0EA2688C93F791C3F0C44844218CD49F70AD830556A980ED4E756070E8E8597874C96E819B5F966D91805C42C589A12992AB917C97D4E964CDDA732C3AAE7C90F7F1FF22437B8F798955067C49615C702DC2CC1D18539ADE8B693544AC18DCF7A225327AD8A4FE285AFD6933B13E26C39EBC3FBA65D33EE1C61AA28B742E73F2DB2DEF568D611318433D93614FDBCFB779BCA95D708D5D00FB7C072427CB371BB076198AD54253400A988BA8903DBE5199BA69DBE2D544F57B8140BEC17E6D7EF28EC1B8A10F1EB58D4E1E7311CA9357686CCECE8C613318B6B28DF8574F5EF8CB3E51FC4409428C648A866D26B9A083A5A69EEB8584D6AC888FD7B4C5F1D7C966D909561AB6473E7C2541CBEB3E1E978372A39F5BE217A81DA43CC7FB22FC6F307761CB99C9B6083329E2CDA61D7589EAC21D1AC0B40DA40C5C331273578ED414D6FA40AEC9E8A3D579CEC77309C031C3F300E5D1304242E9A5E28527EB3993AB9881483E5D0D68BF546FE0A22C02449FF21030376149FC936EDBDE01B76C343B51132BB6E7BC79AD76142B17E1EDB6C5875294BE9A9E28B380A4541AE5FF8D8A98B2691D0AF9A6E2E9DE6F91A0E83327B4E3E8B6217562F7D5BF4579E8E30B1C401782B9E078BC97AB4BAFC12D96FBCFDF493A909608970983A2FDA2F2644B30D0B5BD1987E66C53E5159EB268581BD2F5A748F3F3974A68A446E82FB893F0115FD282110EBA05D8CED6BE75B29C82D0EA96807E643D52B1C06099AC5A6230183AC06B3E17BD785AF0B6CB5482701BE700335F9EAAC7A3D14A93B3938D6CC4D657E313CA0DA46B4DB1EAFC60ED37056B3DC109C9F7F78F66E0A2E2ADE4B6F1413E343D58DA85DF1351903FEF1D2CAFF03DE54487926FEB0567FFD39CA40BE4E3E22E95D9296B3B096E032E73DE3ACD53116EDACD1547508C86AB7B0A0E53921773D0481EBD767E64D49E0ED881E5B32665CA63BBDB5E5988A5E49F63F9809DE212FDE503363FBC0D142BE78C548A8BA8AA8C76CB40E0CF20A682710B530E7E42D03A2EF71F0302C3FD151F1FB330A1D452212829F11C176558A514E69348FE702D99EC976F16A0EFCBF627C9C67496EA6B87DF2B9EFB6125ABA47D2FB81FF46058A0D1F52A314899A356151D3D9743533D0B6C262DAA9AE7CA41F5F095875C43529C09067034D7F14DB15E30001F21CE67AE4081E2886301D3E0957838D574500E76D4E3A5D9B158C28D0E2505E5398CCCB3F2508E36D5FF4ADB43C02AE3BC3AD986B6A6951A035A8E4165EB75639646DCD47248EC9364537B22E4CECA6F8C4C176DE3CB61E5C7758F50879E23F227F7B58C4F8DCA684E7AABCA9D1424EA8AA0A9A8EDF6FD70A70378001236B7F8CF8016FCC83817FF488964B654A1EFA6A6B07D41FAF883A6CFE8479D87FB4055A8818E8E62335F8A3FD66F752C176DAE3A608D0DA131BCF08AB292304F05DCDF68CE9A10ACA6AC5BF1C77927334967E1C1872FA3713DCE62B790ED0F574A9D9DE704846D866C8F92B2EBC830E3709406AB7FC1F22FFACF53FE2287921AE78A500DCA20311E996B5381D5DDA06322551E2F3D4572EC5EF5E35B78D26D25FE015258D63DDF7A0431AE387F6F1B81AB5B39419480E0CFE3F33B36AA8237C4CE2A0BB4D3751692146D16DAA1D46875CDB355B07C124DED0597535B40842ED904BBAA216639A2E510C9BCC66C7146CB3ED8D5C3C255688FAB79E80DF0D4132AC4916323F2D5AB002E74448D17DDCFA574A18AEF79E41A01408B05E8F31B235AC243DE1996982BCB1EE9059E362502DEA22040CA21D32B5D843D747E0CD91ED7A244C35AE0F005EDD94457789CD8BFE7B463CA069EC4138D1EE66C01F138D098D6C9B5745761D29D736414C9EDD68C3075FF6369C8584034AA2F4993A55ACC59B0D008671E04B0A003DB117375AE609EDB3568183B066D5A65BAECA0F936501B442579E752422B2D65515668B662F81D8C7E1E6DB3B114E893F0C20A15BBD4D9F7FA4ABFABA201AB3B1F3AE9929F2E51B3ED747FF8D8EBCE2A241548701891A0775CE69565B9820ABACD00D6671FAA9E2B8C9A59A6C316D1BFC71E54AF42A75DF7EA1F8E3E5B0FE48E02E8AB4CB5071AF2734162A387F32772C254F69BF4E35CFBE809F1F2E7FF6FBCA3288483E9FBC38776DC0B090328CDA14F0CDBE6E5CB66C2E02FCEBB47557F655E231690C860EA75F8C0A0E34D2C86671A41343D61DC6B2FD917FBF941F1F6A8C6461301777A2E3903FEFC7B60CC1444FF3D7F27E157EDA914D6698D50089E15BED4D086ECE7FE57109DB295674BC861F0642501354371313925B8300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%RBIEndFontSubset
/SourceCodePro-Regular cguidfix
/F1.1/SourceCodePro-Regular renmfont
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /P put
dup 34 /r put
dup 35 /o put
dup 36 /x put
dup 37 /y put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C000000186670676D00000000000000B400000428676C796600000000000004DC000004286865616400000000000009040000003668686561000000000000093C00000024686D74780000000000000960000000186C6F636100000000000009780000000E6D6178700000000000000988000000207072657000000000000009A80000004D14000014004B005A00000011FF3A000B0205000C02CA0011B800002C4BB800095058B101018E59B801FF85B844001DB9000900035F5E2DB800012C2020456944B001602DB800022CB800012A212DB800032C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800042C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800052C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800062C2020456944B001602020457D691844B001602DB800072CB800062A2DB800082C4B20B003265358B0801BB040598A8A20B003265358B0022621B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B80003265358B0032545B8014050582321B8014023211BB003254523212321591B2159442DB800092C4B535845441B2121592DB8000A2C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB8000B2C2020456944B001602DB8000C2CB8000B2A212DB8000D2C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB8000E2C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB8000F2C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800102C2020456944B001602020457D691844B001602DB800112CB800102A2DB800122C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800132C4B535845441B2121592DB800142C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800152C2020456944B001602DB800162CB800152A212DB800172C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800182C2046B00425465258238A592046206A6164B0042546
206A61645258238A592FFD2DB800192C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB8001A2C2020456944B001602020457D691844B001602DB8001B2CB8001A2A2DB8001C2C4B20B003265358B0401BB000598A8A20B0032653582321B0808A8A1B8A235920B0032653582321B800C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB8001D2C4B535845441B2121592D00020033000101CC02C8000300070065B800142BB800082FB800002FB8000810B80006D0B800062FB900020003F4B8000010B900040003F4B80009DC00B800014558B800042F1BB90004000A3E59B800014558B800052F1BB9000500043E59B8000410B900000002F4B8000510B900020002F4303101211121131121110199FECD013333FE67029AFD950299FD3902C70002004E0000026202CA000800130089B800152FBA0001000900032BB8000110B8001510B80010DCB80005DC410500DA000500EA000500025D411B0009000500190005002900050039000500490005005900050069000500790005008900050099000500A9000500B9000500C90005000D5DB8000110B8000BD000B8000A2FBA0009000100032BB8000910BA0000000C00032BB800001030311311333216151406270111331133163635342623ADBA514B4B51FEE75FDA6C6F6F6C0174010643404044010156FD360124017064646F0000020024FFF5021A02110013002700CBB800282FB800292FB8002810B80014D0B800142FB80000DC411B0006000000160000002600000036000000460000005600000066000000760000008600000096000000A6000000B6000000C60000000D5D410500D5000000E5000000025DB8002910B8001EDCB8000ADC410500DA000A00EA000A00025D411B0009000A0019000A0029000A0039000A0049000A0059000A0069000A0079000A0089000A0099000A00A9000A00B9000A00C9000A000D5D00BA000F001900032BB8000F10BA0023000500032BB8002310303113343E0233321E0215140E0223222E0227141E0233323E0235342E0223220E027E192C3B21213B2C19192C3B21213B2C195A20405E3D3E5D402020405D3E3D5E402001022F49321A1A32492F2F49311A1A31492F39624929294962393963492A2A496300000001003D0000014D0213000E0027BA0003000100032BB8000310B8000DD0B8000D2F00B800012FBA0009000800032BB8000910303113113335343E02333526060723353D55142C4833455A1F020205FDFBE6324D361C5A023C3F6D0000010009000001FD0205000B002700B800072FB8000A2FB800012FB800042FBA0003000100071112

00>] def
/CharStrings 6 dict dup begin
/.notdef 0 def
/P 1 def
/o 2 def
/r 3 def
/x 4 def
/y 5 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4203806 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB2852CB9BD3FB4254FD5F0903E5B67D5C2ED1223D2F1D96D0624F745D9E6F43F03B659367FFA32D19EC800C16FDA2148F3E79FF6507ABD874784B3606289E62DFEE787FC13CEEA25CF3594335534048317B9758005C2EC60935FA17EC1523D21C95ED134241291D7E1B73CF33932D8A9C33B2AF27A48C823C688094BBB89F003CE73E24E02B18DB043B5DA082B2E8B430D45118F0B05480CE53BB8276FE0C21C3DE6624A07757AAD78AD2D003A04FE51D9DB0F39C29307E94315B4D8CDF495EA3A17FC1245C8DBE6B37C7B60F53C73275070AE90BB64B106E0F6E914C419C732BABE5B17631876EE056FF3D02FF81EB979214A85A540E1F203BE927AA386AA1D6CD638DB03675BF90D1152DB0841A88A9518B33F9C33B275EBE1AFBEB0A6326D0F0066324F1A7EBF2FD21ED9C84DF1B471D3C61486998DB3712693B80508B31BB19C6CBB8A1F69ACB4B452EE4BDB26670FA1AB80CC106E60677B00C138B17B727EAE2EC9175C8A1EA02639B9ADF84AB6E85E2CE817E363EDD06DFB8766667D8F1DA0B3031EA05D03375988847E88FD7A35FFA372008EB867D5C2186784EE3178E552C7DB64FD4A940D5436973ABD724B476C953B62F9F0106A0A97D0EED21AA6E06CD7381DA0DB4CD18EDAE5FD604F0D9F49BC987C510585E8392C40D2ACA0BA835B8E02C7828BA4872FAE1954B224B4B4DB526F0C7DA9281B8D49AD9279E44A1961579C435B044693A42F5FA3583BF8750A4838F0C61690D9967EC99C44FE434AF16A3C11
A7A5DAD23152088EA5123ACC1117875AB1DA34BCF945245033BB13DF3CBCDC85CA4FD06CFB616DCDE7E1DBECB0F2AF036715EC70D6B52A2259BA6AD2AA8DDAB49A883475FC8833802867F38E7C100673D3BB1D668A47F8B22663C35776A7EFD693AB43724832A521139195E851AA1D98B2089883E706DC1DD197867DE1B34D6127687F11C8FE15169F38A8956A0E2409CC50E7E8CE71250C30B192AACC1F5942AF4165BA9653C85631C0A2AF7CAF5FC2F7112883AD9881880318EFE8AD3C2B8907CCB2F644C670F112F7AA2F320A5C815371729B2C91FA8E15AB4A2165D10E73965F09F564DD5DAE5296D175F6A657332A8B74029DC3F08C94E51AF9D3F6B5B9AD558AFEA6F46D01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F2.1/HelveticaNeue renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0 sc
q
0 0 205 119 rc
1 0 0 -1 -145 290 cm
/F1.1[ 16 0 0 -16 0 0]sf
150 220.5 m
(!"#$%)[ 9.600000 9.600000 9.600000 9.600000 0.000000 ] xS
150 240.5 m
(&'\(#$%)[ 9.600000 9.600000 9.600000 9.600000 9.600000 0.000000 ] xS
150 260.5 m
(!"#\)%)[ 9.600000 9.600000 9.600000 9.600000 0.000000 ] xS
150 280.5 m
(&'\(#\)%)[ 9.600000 9.600000 9.600000 9.600000 9.600000 0.000000 ] xS
/F2.1[ 16 0 0 -16 0 0]sf
283 191 m
(!"#$%)[ 10.368000 5.040000 9.184000 8.288000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0.49998799 0.5 0.5 sc
303.44 199.448 m
303.44 289.5 l
S
/Cs3 SC
0 0 0 sc
293.54001 222 m
258.39999 222 l
S
0 i
CM
156.53999 68 m
148.53999 71 l
148.53999 65 l
h
156.53999 68 m
f
0 J
0 j
1 0 0 -1 -145 290 cm
301.54001 222 m
293.54001 219 l
293.54001 225 l
h
301.54001 222 m
S
/Cs1 SC
0 sc
/F1.1[ 16 0 0 -16 0 0]sf
267.5 212 m
($)s
1 J
1 j
0.60000002 i
/Cs3 SC
0 0 0 sc
303.44 237 m
338.70001 237 l
S
0 i
CM
201.7 53 m
193.7 56 l
193.7 50 l
h
201.7 53 m
f
0 J
0 j
1 0 0 -1 -145 290 cm
346.70001 237 m
338.70001 234 l
338.70001 240 l
h
346.70001 237 m
S
/Cs1 SC
0 sc
331 227.5 m
($)s
1 J
1 j
0.60000002 i
/Cs3 SC
0 0 0 sc
293.54001 265 m
258.39999 265 l
S
0 i
CM
156.53999 25 m
148.53999 28 l
148.53999 22 l
h
156.53999 25 m
f
0 J
0 j
1 0 0 -1 -145 290 cm
301.54001 265 m
293.54001 262 l
293.54001 268 l
h
301.54001 265 m
S
/Cs1 SC
0 sc
331 267.5 m
(\))s
1 J
1 j
0.60000002 i
/Cs3 SC
0 0 0 sc
303.44 276 m
338.70001 276 l
S
0 i
CM
201.7 14 m
193.7 17 l
193.7 11 l
h
201.7 14 m
f
0 J
0 j
1 0 0 -1 -145 290 cm
346.70001 276 m
338.70001 273 l
338.70001 279 l
h
346.70001 276 m
S
/Cs1 SC
0 sc
268.5 257.5 m
(\))s
ep
end
%%Trailer
%%EOF
