%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 827.000000 162.000000
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 827 162
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 827 162
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /c put
dup 34 /o put
dup 35 /m put
dup 36 /p put
dup 37 /s put
dup 38 /e put
dup 39 /d put
dup 40 /space put
dup 41 /l put
dup 42 /S put
dup 43 /r put
dup 44 /v put
dup 45 /u put
dup 46 /t put
dup 47 /g put
dup 48 /i put
dup 49 /n put
dup 50 /b put
dup 51 /uniFB00 put
dup 52 /N put
dup 53 /w put
dup 54 /k put
dup 55 /C put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C000000186670676D00000000000000B400000428676C796600000000000004DC0000130C6865616400000000000017E80000003668686561000000000000182000000024686D74780000000000001844000000606C6F636100000000000018A4000000326D61787000000000000018D8000000207072657000000000000018F80000004D14000014004B005A00000011FF3A000B0205000C02CA0011B800002C4BB800095058B101018E59B801FF85B844001DB9000900035F5E2DB800012C2020456944B001602DB800022CB800012A212DB800032C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800042C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800052C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800062C2020456944B001602020457D691844B001602DB800072CB800062A2DB800082C4B20B003265358B0801BB040598A8A20B003265358B0022621B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B80003265358B0032545B8014050582321B8014023211BB003254523212321591B2159442DB800092C4B535845441B2121592DB8000A2C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB8000B2C2020456944B001602DB8000C2CB8000B2A212DB8000D2C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB8000E2C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB8000F2C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800102C2020456944B001602020457D691844B001602DB800112CB800102A2DB800122C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800132C4B535845441B2121592DB800142C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800152C2020456944B001602DB800162CB800152A212DB800172C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800182C2046B00425465258238A592046206A6164B0042546






00>] def
/CharStrings 24 dict dup begin
/.notdef 0 def
/space 1 def
/C 2 def
/N 3 def
/S 4 def
/b 5 def
/c 6 def
/d 7 def
/e 8 def
/g 9 def
/i 10 def
/k 11 def
/l 12 def
/m 13 def
/n 14 def
/o 15 def
/p 16 def
/r 17 def
/s 18 def
/t 19 def
/u 20 def
/v 21 def
/w 22 def
/uniFB00 23 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4111738 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB281E64FFC30D571E77C48863E0C382D48172FCB38E84ECA7A74ECC0BB53ED2E5B617A49459664C53D2435EBD35BE905CB630499A28CA8E1F170A3B6703F50CFB20D390E568F5C7445039FED2778E1D68F25B7688F21AE513534FCFC01E971C3487C30D33630A3899119AFD70D49677A8E26029540AB56770EA5C8683C7EE3547FEEB1E63680B03AA972A078694F6C48862541A4B83B7E5547D5FB1C81FBA11362DAB4360276347C935C2BB32E70581DA2AFCA153C0C222FE5B2DA8DF1B301DBD12010A6B9715DAA27A46246C844FAFB094DEBBE1B1C4E3FC9EF1D956F92B87EF3A3C0E50EF4F494521A9D013C29B6702AE1C5847007E4ED24181948CB1DF4CE364CCC845E6F44CF783A97E15CB1CC71C1ABE8B7FFECD5BEAE375361722BC10A6ACF1954F8077599B76A18AD62D9E916724506FD621C4DFE0BB6AF59F52B67A598287A5F8CF126A3A2051E4294E97C252D4B258A3E884C813C7CFCEEE88DAEC26570A371C20DA1C6977801894B0D0329FD388BF837C9E1875FDED8BE13BF0E809C2E27366AB154495170133F24DF7B9E04B409B8964D06D28F89916B7998C40B145498DA8D16AE91846673FBDF8D1F4BAC7876CA27253A9120C9E5BEC3A6CF4E9EBFF88FD3C05FC171BAFF9C54C11190231DDD3CE60A15874ACB7666CE1F8AC6E671C4E8A93B1EBA8B7F79F8CE5EDDA0D555F41F17BD2F4AF9085581513D455C040332FBE0B28FCC8FFC0768E417D97F55EDD15F027E2D5772DC0DB4E9594ED6E46A26B828
B0235DFB695D83DEF8350D0D8B9E02ACCE1116B031BA3EF25CA2900FB2BE7D99361E2876D18C2A34E7F82920DC747CD5AD12A0C2EA688AE40D1708EC19EDE730C1E9092230FE4D190C139E66FAF2CADF68F559F2017814A1AE23174AD43D4A7EDAB2F5A5E098D512D29BCA8327B4685ED7DC67BDA4A6866D8567ECA8FB709BF6A563630A65C8B9A2489F1288E16E7C0D554275636C2813D1471D05860D3B0AB17DC13CFC9218456829ADB830E3B53D19D0024379F8F5BD1CA52DF0F4DAAA5C2254899ED107D34478C2A8E62EA39726FC58CAB75813B439809121B02379A598D39537CAB9C10172E543D527041A733C8B53A20F3BD1ED87688C2A7EC7DC7D59D1C4F4D5C99FD1C5191CAA45B9814B5A89FCAF4217233C1F59B9B55E4A7860BAB419720B2DF6E6AD8C9D7DDBF37FA957544D02093AF8DCA8402A6CE605919B37F8BB436652EED97F096FE316E40EC8298C4195316B93D5D1C4F565B50299C591138E86A69B923710419CC7B79A7C7B3C41819ECD947D16B08CE56890C0516D6E024716417045815E41235F48E5DC87E325CA7D228AA2592B122B72CBB79AC4ADB8C3D013CE457B3E01F88A1C6577A91380E924D57C54ECA3D26DA804D6C280090B762876BF5954A69A30F903949BE7A44A9FD712437259E4CB51A0D65BD3868EA8952D9FE83C35430F85E51107186FEE7B5E2447448FA9B28CDC430E58228E7621566FE8EDB2063ED895E7DB8F4FA93E6181B031CEE193167E521858D74FEC927FF5494C0FF1696BD063E02898A2CE9FC03467DDE18A8A23D80D37890CF0BB105EDE6E08FBF9ECAE95C14CF303B12F909DF3E9DBCAE97A5B0B5324573E907EC70703F305350373B96A999CFFE1DBAD11A362604A9B06F071E570BF2AABB9CC1747EBB0C938DC9A0977A2863889AB123B753F3ED723F83E1F6DF9893792021492ADB57682F5AF875CC7A65562E40B07B44E0732BE924F84294A01C222B43882A83D1388943341ADC6FEA124FB538C602FB38315A55ECF56C3BF7657F4D3A145AC275CE1AC0BEA0865BA9BC2AF5B2230C9E6940DC92B2F7D0118C3A8A571AB1A25989E7B0DD4D133D5EB61035B8C35EB1E75821A4D84EFA268E388F5ED2C6D80ACC7F0FD817E5CFEF4696D8C42ED22413E777FBF8CD02FF4BD1391A795D7D95D154987D5730138E00EF16224EEB9EFFDF6B7101B65817831266B8FE4D9BC190E8CC0A6040B75ACD20865B17532978FE76CBC3B9F1CF870CFC31C691424E195828DBE80C2F634A5E5DDEE12F970BE6F137223A2FAEE3213891B4E7DFA4D638C032C5433382C3BE599B414374B115E8558A8A6D0C431CAA5316F8FBE0BFC772A8A831E21096626463D11B42F39FC38C8AD3D901654B6243A9673A01F634DB97D7A99F42524D1F3CE47755203D802B3725A1545542915310CB52864186701EC2C3B21BB
3D1DEFCBD27546DA53054D6DE027E096C0D12CB993CF963775E440449644C04C7C168F75BC67E9D603F513F24BCF0A6D960E08F0D5A78EEC599F23B600655BA5E09ECE878CF5B68F1DD2A5516E755A3318E6287DD40769F0121FC6FE8D330A3D9A35ACE7C734590CA0F7700F56A769FB09F83EF5A0A01D998027DCE19F899D7C812448527FCAFAD6EEA7C55FEC2B6E9907924B53F911A0612768230863D4656E5E782D9A844863EF3FB5AC06CB3F5AAA185201DC1F6F28ADE978744035093A87E420D7A3D60C9C1F3DFFDEDA0CC8B3CEB6AB22877E3C703574E0D401771D58FC56DFF5B8BC75AA557196A53B56D9C4844830DC0539ADA61470F3654DF52551A9989E8B263F0A419637852F10AC6FE0BA808F71F2C944D5DD4A5FDAA641173C5534D037A5063F2A0954C3935E73543B794E7E1AD50F6C085066D0705781F91E3AC6B4245F46C174DE507D49A74287D1BF0F38010652544BA56EB853A8ECB44B02DBD6890DA332E39BC8DE74BF7B25D20EE6BF9204F96D506E6FD251B64D708464BE9D0866432AEB46EB3591D0F23B1F7E356FBDE285C1C74D83C125B43E9199B14F31852C5CB5BB228F82A4BEC1F5304547B7264A35D00ABCAE4EA4663DC7ED5ABF788607142BC68916F8D1B0302D1ADF8D753292F310315CB90BA1EF0FFE8646CC9F2A705CA31A3546D3C2A217C17DEF7F007FEF7A82AFD48DD93E23E9282A20FC771547EE513076A49791532A2AF269FCE3595CA3B0C03030B5BBC6A19FAE87DFB724D79BAF2E390026C5D5FFFC178AB69DDD9C222882F826AC8E5FC6B01F16369BCDF9CF5CB0D3F4CC44F2328C58B4AAFB3A6528392787E0E3C04C2FA2846F203167680313B7989B183C1D3BA4F1AEC84C4D166CA2A7CD5306D937C4FA9E563712F1C9FC4940760363A02FAF646DF7689940E7DFE64280DF68F19442FA6BA3CAC57E30CB5A433998194DEA4344A65AE31D109A1FDD174FB24B62DDEB5CFC01F169CA94546630433BAFC5B42DE2F71F9BB3B0A25E27AC527A973BC1C0CB7A271F4180EB09891F0C55B72081C1E6E0687C1B33EF111CEDC0FD378E00BBEFCD27F4FC04FCC49042166D6DED0BC1FEA439EDC90EB74BAD4F91B1C079C0880FC14627976F4521B78873AC3430714460A68EA13DA17B5A2F8E9D8150C2E4D217572DC6F4DEE7F4C1466E497B17D372CF5237CDD069BA848E9575A55E05055CBB0DBF8BA20EFFC62C020D693D00DFD21828DE550D134D5074A4D35B99C732920402752D132C5E2E6872E786E91C83F6542E97012371E22D2A3EC64EFAD5EA0D17F7562589B4812722C6F84DF43A66A3BDF2DE4137C39BB1F5A9401A9A671DD1422C65E65AA4148733B689928FC603DD7E35636995625C8B15DD758CA6692BA9103645D5D0373D389956D9486B098850CAF61CFF734C4C5CB813D37BF8AE90B7D0BAA1
8DE2C87EFECEF36E65A1AA3741357E0EC63C55C8FA33AED83A2C90A0FB42CF466AB8CD5A07A2D8DF1B92F640B163DBFD622918F5BCA89103AB16CA67C2325B684F81904A9B992858C2CCD694E2CCB383B4AED7DAA201DFB20C27014C07A6D6815C040977EBE87DFF2879F297912F89AE229B80CF7FABEFFA5AD9F2833C6363094E7155819E34198C97478601796B22FE521D0D31922EA06FC971B741006A75479430DF67039AD326B1F3F57E3C3C874AD5C8FC06664A0E49C0E89281074262F6833258D9BD55455E58BD41799FB27DD3EB6A57E98E5EF6222F59321098274BA2C63A679788FE8D0DFA2A1BC10DF25CD544A2724AEAA8461E9E54F94E137B4F843CC7B8BFA6C01AF672285BED1A1B7ECE090352DC26D9A577C763A69A99A790FB929C6619013BD5E890D2DEE85CA225530C5C2969D76B721FD3D15C821FC824DF23295ADD80F577D3F36A25FFC577DFBCDE196489A204AECE06FF50BB1DBD8780C76AEB1E637E1F217D5BD4F02C6DD52B6B8C2A0921B106DCD599ED82E2AF25C3C020619CCD322F80FC0F88F05A75AEA3D1049EFD6C52A907FAD470E8230786552158426D2A26DB4F4D005B9D21967D440740901AD2A8CBAEA3C0703CB9DC1DDD88FD1C9B3CCA5259400642254CE9C142D09742CFA428C1DABED3FF5E640C30FDCADC5558F99FBAA0AD7C4D7AF64E6274F61A88057D1260598DCABB92CD7B157CD9ED1D612CCF76C09A8C29EEF88477D680C031F669868F98B3FD21B909DB0BEC979ED12DB7DE8E4E04974905B81477C088A089BEB21378F410D2D13E2E486E4D6AF28F2F76C024CB0F0CBBC5BE925CB68E4B3E4FC735F2492841AADCBBD452E91F059F5497755EB6E97504BED62B36695A7F13989771F25844BF19CE9DC9FBFAF80B3CF541FD5A9E835F5F7D078D8EA203774554829FDE4E0359D8347BAF8D509A980A8B53864F3E2B3A7988F8250F5D5808DB4A0BAA10342F0DC3AAE2F63C5AE90290C3CF7D5193A667806F574C719D386829CFF772D22B3F8717D350823379EDF6FE38FEE8AF698354CFF20465EF7AE8D71D9C85523BAC3B43420EAB68B9509741B7919E6DF7C96BD0461DE68ADB55DEAFD78017C90893BB72B94A55A44DD4CDB328F6372385A211417F0F18F9DC158ECFEF3A3A7CAD7F5CDB7417EA214798103051E2CC8ED771725F707D97BB552C05970EC82638D2B882555A056C63EB14737A460CF7F7F1FCDE6DECDB98D7526F0B1CED59C027E4EA8FE60D5C19981AB014083D89017E6F6CFC9AC5D453267BA0708F56C69ABCB295FC692EA79CE5917CBE3215DF67D6F7C1FAFB88DF26F97B100DD6046331C8841C8C13509B013F0AAB542D153D9845E8BEFBCE6DC25EFDAA75CDE6BD7C830BFC0172388D2C593C5B70E4AEBEE771599CE6C73CFECC7A4BAC550B8A36DE46C4B54C362C019211A58715
65DA3B6F84EA2B0C3A06D24B97EF012CA13FCDFEC0CAC6DB7F074888E2D612590564A01B7BC125EFDF33A0D3C43C0450FC558FC40AD372B05F159BEA4EACD8B769145978B66D63A18BF94702A6550E5B11FC97585B0653FCDC6B00A995D002DB4895D8D50614059A136E4F3267DD36A22E092519C7C15F441F3B2E81B350E91FB5C7C5901BAE4E7A54B532FF7CE825AF367B14C75453318CF4A355CD50B48176FD0D17C742F93FDD3CE2AD2967C9DE1A0C95F4C452600279D144824CC6D350DE4FC6F3432F913DDD68BD732C860D48FA7C0A661C62F01C01EDFC5AEE3D9D144F51AB08B33232771BCBA0EA9BFD3C5350845AC94DDEE7419FD04618ABDFF2E720DC9C1FB74E557ECFB0A31FEBE97BD00AEFF7780AF080ABF98D3468F91DBEAEBD62DD1CB4B1B97518FC5290D76A2CBFAED2710EA01C7B19D56368741C3B45EA406E21704AA4CF2F892FFC609C48760E4F660B260AEAB58C165D3EDE5BEB0E1D1A85609BFF2C5C0AFE0CC645C86A8B6E87E51741F137CDEEAFA036871332C9C1964E6296B4DB6BFD182CA3064EA93947E2E54BFC7BA7BFA37F53084152B9329AE8F51D0C8EF2377BA4966C2CED526C99B4084E6BACB791FE0090410D3C587A085B2FDACA4B6FAD0BDF572C17845893206E1D5C01193EB86889485AF2AF547579084D72478254C35FE4AD63E939A6256207301DC8D473ED05EB3BAC0CA2BBFA0642ACCD9F940B0A2C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: SourceCodePro-Regular
%!FontType1-1.0: SourceCodePro-Regular 1.0000.1.0100
14 dict begin
/FontName /SourceCodePro-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /S put
dup 34 /e put
dup 35 /n put
dup 36 /d put
dup 37 /A put
dup 38 /b put
dup 39 /s put
dup 40 /o put
dup 41 /r put
dup 42 /E put
dup 43 /m put
dup 44 /i put
dup 45 /t put
dup 46 /R put
dup 47 /c put
dup 48 /v put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -25 1 index div -285 2 index div 706 3 index div 952 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C000000226670676D00000000000000C000000173676C7966000000000000023400000BB0686561640000000000000DE400000036686865610000000000000E1C00000024686D74780000000000000E40000000446C6F63610000000000000E84000000246D6178700000000000000EA800000020707265700000000000000EC8000000410014004400560000000CFF33000C01E6000C023E000C027E000C0290000C02C8000C0000B800002C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800012C2020456944B001602DB800022CB800012A212DB800032C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800042C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800052C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800062C2020456944B001602020457D691844B001602DB800072CB800062A2DB800082C4B20B003265358B0401BB000598A8A20B0032653582321B0808A8A1B8A235920B0032653582321B800C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800092C4B535845441B2121592D000005003E0000021A0294000300060009000F0015003D00B800004558B800002F1BB90000000D3E59B800004558B800022F1BB9000200033E59B9000A0001F4B8000CDCB8000010B900120001F4B80010DC303113211121132711211107132F01230F01133F01231F013E01DCFE24C18001597F52493404364A843142EB42320294FD6C0154E8FE3201CEE8FEE68467678401495E77775E000002002000000238029000090011004100B800004558B8000E2F1BB9000E000D3E59B800004558B8000D2F1BB9000D00033E59BB000A0001000900042BB8000E10B900050001F4B8000D10B80011D0303101272E0127230E010F011723072313331323018D1F112010041020111FD9EE3F55DD5EDD58010B64376D39396D376443C80290FD70000000010073000002120290000B004D00B800004558B800002F1BB90000000D3E59B800004558B8000B2F1BB9000B00033E59B8000010B900030001F4BA0007000B0000111239B800072FB900040001F4B8000B10B900080001F43031132115211521152115211521730195FEBF010FFEF1014BFE61029046CE47EE47000002006400000229029000080018005300B800004558B8000E2F1BB9000E000D3E59B800004558B8000D2F1BB9000D00



00>] def
/CharStrings 17 dict dup begin
/.notdef 0 def
/A 1 def
/E 2 def
/R 3 def
/S 4 def
/b 5 def
/c 6 def
/d 7 def
/e 8 def
/i 9 def
/m 10 def
/n 11 def
/o 12 def
/r 13 def
/s 14 def
/t 15 def
/v 16 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-25 -285 706 952} readonly def
/UniqueID 4158941 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB2829775B70D17B42EDA8CC4658DDF1D1ECA31288756CA6F91C8712AFE3F4C554737C5F28F3E9C127F7307B0551616D59717DDAF8EC486AB814AE2AFED3A645E244E45E01E9465C81FF747F42D6BBCE29BC7F140CE346E79DC9678B0E214F07F14AAF96853782CFFDB770172DE92EB3F7A69C009FB96CF478C6B255BA1DF0EC263462D3B5654025CC83D70A0C695BDBBFE0BC017B35BE7DE609211E0FB98D8F20DBB9E6E841D35BE1651511E8EB4A59CA0726A376817239ACBE3A653A9ECAA34A2A7B41D674755EDB3CC91AF6ADC1E9373DEC32837FB5E923535CCA8F827868812927C721AC181D4998F323F78CDB6DF2D77168D86D2393465A549F302B8AEA1BBD63751C71CABDF2B4D1E760C2CCF0873BA1ADC7DB2E6BA06A5D67047E868A1AA463590DAD4759B22CBE22E6ACBCD795D60578E3A7280C144DEA1F004701E2410D52D73EE493BD22531E0AE2BF10C94BD6C3BAD7CFA4161DC55364B7C96095D308C330CF35E7DF100A5DC7A6E1CC2C5695113F5D0AB256E54E97AA82BD0DB14605FD1437F7BC79EC58E64CDC03C41363EC0708A60576B03456F0DF74EAE58B9BD77AD856FDE1232ED87D80F80B9B6F62591B5593544B907E7ECB0E8166CC98A840DEC22F9D6F3AF765D6C40514743C62DED5E25E67DFFE83DB88247A7B6EB389129D95C5586AF8752113B8DEDEBFC45A4EA7209CCC31761FA940DFA75A4CF8F36A394DE06D40F0B13F6510C4BB28AAD514487145208CD60FEC7786317C34C0AECDEF73F6B


96DCFC9154FD8D54B1E56027E63236C0FABA54461687B8765CE41C5B688C7B6706066B1DCFEED5036A4C32FB5784A68A1EE0B4CB2E1AE2903EB8F9EE0FAD352EE44054132467C5C734E38ABA97F27CBC9F3FA33A61ABE77AC4621EC86474FCA3EBC14CE34C2372C4410EF26669372BECDE50154360B20314FC630429A8D9DF5D127B667C96A10933CD5B69EA86AF479F5458709DBB2584E0248CEA8AFF7526DED0B75356BC78154A28DD16DCA29093A28519D526AE6B936A4DDF7D52BC1B46EE1A46879F0773A958C0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/SourceCodePro-Regular cguidfix
/F2.1/SourceCodePro-Regular renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
1 J
1 j
[
4
4
] 0 d
0.60000002 i
/Cs1 SC
0 0.21568628 0.4627451 sc
q
0 0 827 162 rc
1 0 0 -1 326 91 cm
-325 -70 m
325 -70 l
325 90 l
-325 90 l
h
-325 -70 m
S
0 i
/F1.1[ 16 0 0 -16 0 0]sf
-62.543999 81.552002 m
(!"#$"%&'\(#"'&\))[ 8.592000 9.184000 13.648000 9.488000 9.184000 8.000000 8.592000 9.488000 4.448000 13.648000 9.184000 9.488000 8.592000 0.000000 ] xS
[] 0 d
0.60000002 i
0 0.21568599 0.46274501 sc
-300 -50 m
-200 -50 l
-200 50 l
-300 50 l
h
-300 -50 m
S
0 0.21569 0.46274999 sc
0 i
-273.104 5.776001 m
(*&+,&+)[ 10.368000 8.592000 5.328000 8.000000 8.592000 0.000000 ] xS
0.60000002 i
0 0.21568599 0.46274501 sc
-100 -50 m
100 -50 l
100 -10 l
-100 -10 l
h
-100 -50 m
S
0 0.21569 0.46274999 sc
0 i
-54.551998 -24.223999 m
("-./"01/\(2-3&+)[ 9.184000 8.896000 5.040000 9.184000 9.184000 3.552000 8.896000 9.184000 4.448000 9.488000 8.896000 9.232000 8.592000 0.000000 ] xS
1 1 1 sc
CM
226 81 m
426 81 l
426 41 l
226 41 l
h
226 81 m
f
0.60000002 i
0.69411767 0 0.10980392 sc
1 0 0 -1 326 91 cm
-100 10 m
100 10 l
100 50 l
-100 50 l
h
-100 10 m
S
0 i
-55.743999 35.776001 m
(01!"#01/\(2-3&+)[ 3.552000 8.896000 8.592000 9.184000 13.648000 3.552000 8.896000 9.184000 4.448000 9.488000 8.896000 9.232000 8.592000 0.000000 ] xS
0.60000002 i
0.13725491 0.36862746 0 sc
200 -50 m
300 -50 l
300 50 l
200 50 l
h
200 -50 m
S
0 i
219.936 5.776001 m
(4&.5"+6)[ 11.552000 8.592000 5.040000 12.128000 9.184000 5.328000 0.000000 ] xS
0.60000002 i
0 0.21568599 0.46274501 sc
-200 -30 m
-109.9 -30 l
S
0 i
CM
224.10001 121 m
216.10001 124 l
216.10001 118 l
h
224.10001 121 m
f
0 J
0 j
1 0 0 -1 326 91 cm
-101.9 -30 m
-109.9 -33 l
-109.9 -27 l
h
-101.9 -30 m
S
1 J
1 j
0.60000002 i
0.69411767 0 0.10980392 sc
-100 30 m
-190.10001 30 l
S
0 i
CM
127.9 61 m
135.89999 58 l
135.89999 64 l
h
127.9 61 m
f
0 J
0 j
1 0 0 -1 326 91 cm
-198.10001 30 m
-190.10001 33 l
-190.10001 27 l
h
-198.10001 30 m
S
1 J
1 j
0.60000002 i
0 0.21568599 0.46274501 sc
100 -30 m
190.10001 -30 l
S
0 i
CM
524.09998 121 m
516.09998 124 l
516.09998 118 l
h
524.09998 121 m
f
0 J
0 j
1 0 0 -1 326 91 cm
198.10001 -30 m
190.10001 -33 l
190.10001 -27 l
h
198.10001 -30 m
S
1 J
1 j
0.60000002 i
0.69411802 0 0.109804 sc
200 30 m
109.9 30 l
S
0 i
CM
427.89999 61 m
435.89999 58 l
435.89999 64 l
h
427.89999 61 m
f
0 J
0 j
1 0 0 -1 326 91 cm
101.9 30 m
109.9 33 l
109.9 27 l
h
101.9 30 m
S
1 J
1 j
0.60000002 i
0.69411767 0 0.10980392 sc
400 -50 m
500 -50 l
500 50 l
400 50 l
h
400 -50 m
S
0 i
425.40799 5.776001 m
(7\)0&1.%)[ 11.552000 3.552000 3.552000 8.592000 8.896000 5.040000 0.000000 ] xS
0.60000002 i
0 0.21568599 0.46274501 sc
300 -30 m
390.10001 -30 l
S
0 i
CM
724.09998 121 m
716.09998 124 l
716.09998 118 l
h
724.09998 121 m
f
0 J
0 j
1 0 0 -1 326 91 cm
398.10001 -30 m
390.10001 -33 l
390.10001 -27 l
h
398.10001 -30 m
S
1 J
1 j
0.60000002 i
0.69411767 0 0.10980392 sc
400 29.5 m
309.89999 29.5 l
S
0 i
CM
627.90002 61.5 m
635.90002 58.5 l
635.90002 64.5 l
h
627.90002 61.5 m
f
0 J
0 j
1 0 0 -1 326 91 cm
301.89999 29.5 m
309.89999 32.5 l
309.89999 26.5 l
h
301.89999 29.5 m
S
0 0.21569 0.46274999 sc
/F2.1[ 16 0 0 -16 0 0]sf
-169.2 -39 m
(!"#$)[ 9.600000 9.600000 9.600000 0.000000 ] xS
121.2 -39 m
(%&'\(\)&)[ 9.600000 9.600000 9.600000 9.600000 9.600000 0.000000 ] xS
339.60001 -39 m
(*+,-)[ 9.600000 9.600000 9.600000 0.000000 ] xS
0.69411767 0 0.10980392 sc
330 51 m
(%&'\(\)&)[ 9.600000 9.600000 9.600000 9.600000 9.600000 0.000000 ] xS
130.8 51 m
(*+,-)[ 9.600000 9.600000 9.600000 0.000000 ] xS
0.69411999 0 0.1098 sc
-169.2 50.5 m
(."/0)[ 9.600000 9.600000 9.600000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
